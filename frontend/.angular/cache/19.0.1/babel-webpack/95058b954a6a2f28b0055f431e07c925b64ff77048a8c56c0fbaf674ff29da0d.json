{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/conta.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ContaComponent_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 4);\n    i0.ɵɵlistener(\"click\", function ContaComponent_li_7_Template_li_click_0_listener() {\n      const conta_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selecionarConta(conta_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const conta_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"selecionada\", conta_r2 === ctx_r2.contaSelecionada);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" Conta \", conta_r2.idConta, \" - \", conta_r2.nomeTitular, \" \");\n  }\n}\nfunction ContaComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"h2\");\n    i0.ɵɵtext(2, \"Detalhes da Conta\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n    i0.ɵɵtext(5, \"ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\")(8, \"strong\");\n    i0.ɵɵtext(9, \"Nome do Titular:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\")(12, \"strong\");\n    i0.ɵɵtext(13, \"Saldo:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"p\")(17, \"strong\");\n    i0.ɵɵtext(18, \"Status:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"p\")(21, \"strong\");\n    i0.ɵɵtext(22, \"Data de Cria\\u00E7\\u00E3o:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23);\n    i0.ɵɵpipe(24, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_10_Template_button_click_25_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.carregarDetalhesConta());\n    });\n    i0.ɵɵtext(26, \"Atualizar Detalhes\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.contaSelecionada.idConta, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.contaSelecionada.nomeTitular, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(15, 5, ctx_r2.contaSelecionada.saldo), \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.contaSelecionada.status, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(24, 7, ctx_r2.contaSelecionada.dataCriacao), \"\");\n  }\n}\nfunction ContaComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"h2\");\n    i0.ɵɵtext(2, \"Opera\\u00E7\\u00F5es\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 13);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_div_17_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.valor, $event) || (ctx_r2.valor = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_17_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.realizarDeposito());\n    });\n    i0.ɵɵtext(5, \"Dep\\u00F3sito\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_17_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.realizarSaque());\n    });\n    i0.ɵɵtext(7, \"Saque\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.valor);\n  }\n}\nfunction ContaComponent_div_18_div_5_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"strong\");\n    i0.ɵɵtext(2, \"Data:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementStart(5, \"strong\");\n    i0.ɵɵtext(6, \"Descri\\u00E7\\u00E3o:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7);\n    i0.ɵɵelementStart(8, \"strong\");\n    i0.ɵɵtext(9, \"Valor:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 3, item_r7.data), \" - \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", item_r7.descricao, \" - \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(11, 5, item_r7.valor), \" \");\n  }\n}\nfunction ContaComponent_div_18_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ul\");\n    i0.ɵɵtemplate(2, ContaComponent_div_18_div_5_li_2_Template, 12, 7, \"li\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.extrato);\n  }\n}\nfunction ContaComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h2\");\n    i0.ɵɵtext(2, \"Extrato\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_18_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.alternarExtrato());\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ContaComponent_div_18_div_5_Template, 3, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.mostrarExtrato ? \"Ocultar\" : \"Exibir\", \" Extrato \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.mostrarExtrato);\n  }\n}\nfunction ContaComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"p\");\n    i0.ɵɵtext(2, \"Ocorreu um erro ao carregar as contas. Tente novamente.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let ContaComponent = /*#__PURE__*/(() => {\n  class ContaComponent {\n    contaService;\n    contas = [];\n    contaSelecionada = null;\n    nomeTitular = '';\n    valor = 0;\n    mostrarExtrato = false;\n    extrato = [];\n    erro = false;\n    constructor(contaService) {\n      this.contaService = contaService;\n    }\n    ngOnInit() {\n      this.listarContas();\n    }\n    listarContas() {\n      const idUsuario = localStorage.getItem('idUsuario');\n      if (!idUsuario) {\n        alert('Usuário não autenticado! Faça login para listar as contas.');\n        return;\n      }\n      this.contaService.listarContasPorUsuario().subscribe({\n        next: dados => {\n          console.log('Contas retornadas pelo backend:', dados);\n          // Verifica se o retorno é um objeto único ou um array\n          if (Array.isArray(dados)) {\n            this.contas = dados;\n          } else {\n            this.contas = [dados]; // Converte o objeto único em um array\n          }\n          this.erro = false;\n        },\n        error: err => {\n          console.error('Erro ao listar contas:', err);\n          this.erro = true;\n          alert('Não foi possível listar as contas.');\n        }\n      });\n    }\n    selecionarConta(conta) {\n      this.contaSelecionada = conta;\n      this.mostrarExtrato = false; // Ocultar extrato ao selecionar outra conta\n    }\n    criarConta() {\n      const idUsuario = localStorage.getItem('idUsuario');\n      if (!idUsuario) {\n        alert('Usuário não autenticado!');\n        return;\n      }\n      if (!this.nomeTitular.trim()) {\n        alert('Informe o nome do titular para criar a conta.');\n        return;\n      }\n      this.contaService.criarConta({\n        nomeTitular: this.nomeTitular\n      }, +idUsuario).subscribe({\n        next: novaConta => {\n          console.log('Resposta da API (novaConta):', novaConta); // Verifique o que está sendo retornado\n          alert('Conta criada com sucesso!');\n          if (novaConta) {\n            this.contas.push(novaConta); // Adiciona a nova conta à lista\n            this.selecionarConta(novaConta); // Seleciona a conta automaticamente\n          } else {\n            console.error('Erro: A resposta da API não contém uma conta válida.');\n          }\n        },\n        error: err => {\n          console.error('Erro ao criar conta:', err);\n          alert('Erro ao criar a conta.');\n        }\n      });\n    }\n    realizarDeposito() {\n      if (!this.contaSelecionada || this.valor <= 0) {\n        alert('Informe um valor válido para depósito.');\n        return;\n      }\n      this.contaService.realizarDeposito(this.contaSelecionada.idConta, this.valor).subscribe({\n        next: contaAtualizada => {\n          alert('Depósito realizado com sucesso!');\n          this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\n          this.valor = 0; // Limpa o campo de valor\n        },\n        error: err => {\n          console.error('Erro ao realizar depósito:', err);\n          alert('Erro ao realizar depósito. Tente novamente.');\n        }\n      });\n    }\n    realizarSaque() {\n      if (!this.contaSelecionada || this.valor <= 0) {\n        alert('Informe um valor válido para saque.');\n        return;\n      }\n      this.contaService.realizarSaque(this.contaSelecionada.idConta, this.valor).subscribe({\n        next: contaAtualizada => {\n          alert('Saque realizado com sucesso!');\n          this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\n          this.valor = 0; // Limpa o campo de valor\n        },\n        error: err => {\n          console.error('Erro ao realizar saque:', err);\n          alert('Erro ao realizar saque. Tente novamente.');\n        }\n      });\n    }\n    carregarExtrato() {\n      if (!this.contaSelecionada) {\n        alert('Selecione uma conta para visualizar o extrato.');\n        return;\n      }\n      this.contaService.getExtrato(this.contaSelecionada.idConta).subscribe({\n        next: extrato => {\n          this.extrato = extrato;\n        },\n        error: err => {\n          console.error('Erro ao carregar extrato:', err);\n          alert('Erro ao carregar o extrato.');\n        }\n      });\n    }\n    carregarDetalhesConta() {\n      if (!this.contaSelecionada) {\n        return;\n      }\n      this.contaService.obterDetalhesConta(this.contaSelecionada.idConta).subscribe({\n        next: contaAtualizada => {\n          this.contaSelecionada = contaAtualizada;\n        },\n        error: err => {\n          console.error('Erro ao carregar detalhes da conta:', err);\n          alert('Erro ao carregar detalhes da conta.');\n        }\n      });\n    }\n    static ɵfac = function ContaComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ContaComponent)(i0.ɵɵdirectiveInject(i1.ContaService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ContaComponent,\n      selectors: [[\"app-conta\"]],\n      decls: 20,\n      vars: 6,\n      consts: [[1, \"container\"], [1, \"contas-section\"], [1, \"lista-contas\"], [3, \"selecionada\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"class\", \"detalhes-conta\", 4, \"ngIf\"], [1, \"nova-conta\"], [\"type\", \"text\", \"placeholder\", \"Nome do Titular\", 3, \"ngModelChange\", \"ngModel\"], [\"class\", \"operacoes\", 4, \"ngIf\"], [\"class\", \"extrato-section\", 4, \"ngIf\"], [\"class\", \"erro-mensagem\", 4, \"ngIf\"], [1, \"detalhes-conta\"], [1, \"operacoes\"], [\"type\", \"number\", \"placeholder\", \"Valor (R$)\", 3, \"ngModelChange\", \"ngModel\"], [1, \"extrato-section\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"erro-mensagem\"]],\n      template: function ContaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"Gerenciamento de Contas\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"h2\");\n          i0.ɵɵtext(5, \"Minhas Contas\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"ul\", 2);\n          i0.ɵɵtemplate(7, ContaComponent_li_7_Template, 2, 4, \"li\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function ContaComponent_Template_button_click_8_listener() {\n            return ctx.listarContas();\n          });\n          i0.ɵɵtext(9, \"Atualizar Contas\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(10, ContaComponent_div_10_Template, 27, 9, \"div\", 5);\n          i0.ɵɵelementStart(11, \"div\", 6)(12, \"h2\");\n          i0.ɵɵtext(13, \"Criar Nova Conta\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_Template_input_ngModelChange_14_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.nomeTitular, $event) || (ctx.nomeTitular = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function ContaComponent_Template_button_click_15_listener() {\n            return ctx.criarConta();\n          });\n          i0.ɵɵtext(16, \"Criar Conta\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(17, ContaComponent_div_17_Template, 8, 1, \"div\", 8)(18, ContaComponent_div_18_Template, 6, 2, \"div\", 9)(19, ContaComponent_div_19_Template, 3, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngForOf\", ctx.contas);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.contaSelecionada);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.nomeTitular);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.contaSelecionada);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.contaSelecionada);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.erro);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, i2.CurrencyPipe, i2.DatePipe, FormsModule, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return ContaComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵlistener","ContaComponent_li_7_Template_li_click_0_listener","conta_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","selecionarConta","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","contaSelecionada","ɵɵadvance","ɵɵtextInterpolate2","idConta","nomeTitular","ContaComponent_div_10_Template_button_click_25_listener","_r4","carregarDetalhesConta","ɵɵtextInterpolate1","ɵɵpipeBind1","saldo","status","dataCriacao","ɵɵtwoWayListener","ContaComponent_div_17_Template_input_ngModelChange_3_listener","$event","_r5","ɵɵtwoWayBindingSet","valor","ContaComponent_div_17_Template_button_click_4_listener","realizarDeposito","ContaComponent_div_17_Template_button_click_6_listener","realizarSaque","ɵɵtwoWayProperty","item_r7","data","descricao","ɵɵtemplate","ContaComponent_div_18_div_5_li_2_Template","ɵɵproperty","extrato","ContaComponent_div_18_Template_button_click_3_listener","_r6","alternarExtrato","ContaComponent_div_18_div_5_Template","mostrarExtrato","ContaComponent","contaService","contas","erro","constructor","ngOnInit","listarContas","idUsuario","localStorage","getItem","alert","listarContasPorUsuario","subscribe","next","dados","console","log","Array","isArray","error","err","conta","criarConta","trim","novaConta","push","contaAtualizada","carregarExtrato","getExtrato","obterDetalhesConta","ɵɵdirectiveInject","i1","ContaService","selectors","decls","vars","consts","template","ContaComponent_Template","rf","ctx","ContaComponent_li_7_Template","ContaComponent_Template_button_click_8_listener","ContaComponent_div_10_Template","ContaComponent_Template_input_ngModelChange_14_listener","ContaComponent_Template_button_click_15_listener","ContaComponent_div_17_Template","ContaComponent_div_18_Template","ContaComponent_div_19_Template","i2","NgForOf","NgIf","CurrencyPipe","DatePipe","i3","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgModel","styles"],"sources":["C:\\Users\\Mallmann\\Desktop\\Teste\\frontend\\src\\app\\conta-component\\conta-component.component.ts","C:\\Users\\Mallmann\\Desktop\\Teste\\frontend\\src\\app\\conta-component\\conta-component.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ContaService } from '../services/conta.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ContaDTO } from '../conta.model';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-conta',\r\n  templateUrl: './conta-component.component.html',\r\n  styleUrls: ['./conta-component.component.css'],\r\n  imports: [CommonModule, FormsModule],\r\n})\r\nexport class ContaComponent implements OnInit {\r\n  contas: ContaDTO[] = [];\r\n  contaSelecionada: ContaDTO | null = null;\r\n  nomeTitular: string = '';\r\n  valor: number = 0;\r\n  mostrarExtrato: boolean = false;\r\n  extrato: any[] = [];\r\n  erro: boolean = false;\r\n\r\n  constructor(private contaService: ContaService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.listarContas();\r\n  }\r\n\r\n  listarContas(): void {\r\n    const idUsuario = localStorage.getItem('idUsuario');\r\n    if (!idUsuario) {\r\n      alert('Usuário não autenticado! Faça login para listar as contas.');\r\n      return;\r\n    }\r\n  \r\n    this.contaService.listarContasPorUsuario().subscribe({\r\n      next: (dados: ContaDTO | ContaDTO[]) => {\r\n        console.log('Contas retornadas pelo backend:', dados);\r\n  \r\n        // Verifica se o retorno é um objeto único ou um array\r\n        if (Array.isArray(dados)) {\r\n          this.contas = dados;\r\n        } else {\r\n          this.contas = [dados]; // Converte o objeto único em um array\r\n        }\r\n  \r\n        this.erro = false;\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao listar contas:', err);\r\n        this.erro = true;\r\n        alert('Não foi possível listar as contas.');\r\n      },\r\n    });\r\n  }\r\n  \r\n  \r\n  \r\n\r\n  selecionarConta(conta: ContaDTO): void {\r\n    this.contaSelecionada = conta;\r\n    this.mostrarExtrato = false; // Ocultar extrato ao selecionar outra conta\r\n  }\r\n\r\n  criarConta(): void {\r\n    const idUsuario = localStorage.getItem('idUsuario');\r\n    if (!idUsuario) {\r\n      alert('Usuário não autenticado!');\r\n      return;\r\n    }\r\n  \r\n    if (!this.nomeTitular.trim()) {\r\n      alert('Informe o nome do titular para criar a conta.');\r\n      return;\r\n    }\r\n  \r\n    this.contaService.criarConta({ nomeTitular: this.nomeTitular }, +idUsuario).subscribe({\r\n      next: (novaConta: ContaDTO) => {\r\n        console.log('Resposta da API (novaConta):', novaConta); // Verifique o que está sendo retornado\r\n        alert('Conta criada com sucesso!');\r\n        if (novaConta) {\r\n          this.contas.push(novaConta);  // Adiciona a nova conta à lista\r\n          this.selecionarConta(novaConta);  // Seleciona a conta automaticamente\r\n        } else {\r\n          console.error('Erro: A resposta da API não contém uma conta válida.');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao criar conta:', err);\r\n        alert('Erro ao criar a conta.');\r\n      }\r\n    });\r\n  }\r\n  \r\n  \r\n  \r\n\r\n  realizarDeposito(): void {\r\n    if (!this.contaSelecionada || this.valor <= 0) {\r\n      alert('Informe um valor válido para depósito.');\r\n      return;\r\n    }\r\n  \r\n    this.contaService.realizarDeposito(this.contaSelecionada.idConta, this.valor).subscribe({\r\n      next: (contaAtualizada) => {\r\n        alert('Depósito realizado com sucesso!');\r\n        this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\r\n        this.valor = 0; // Limpa o campo de valor\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao realizar depósito:', err);\r\n        alert('Erro ao realizar depósito. Tente novamente.');\r\n      },\r\n    });\r\n  }\r\n  \r\n  realizarSaque(): void {\r\n    if (!this.contaSelecionada || this.valor <= 0) {\r\n      alert('Informe um valor válido para saque.');\r\n      return;\r\n    }\r\n  \r\n    this.contaService.realizarSaque(this.contaSelecionada.idConta, this.valor).subscribe({\r\n      next: (contaAtualizada) => {\r\n        alert('Saque realizado com sucesso!');\r\n        this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\r\n        this.valor = 0; // Limpa o campo de valor\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao realizar saque:', err);\r\n        alert('Erro ao realizar saque. Tente novamente.');\r\n      },\r\n    });\r\n  }\r\n  \r\n\r\n  carregarExtrato(): void {\r\n    if (!this.contaSelecionada) {\r\n      alert('Selecione uma conta para visualizar o extrato.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.getExtrato(this.contaSelecionada.idConta).subscribe({\r\n      next: (extrato) => {\r\n        this.extrato = extrato;\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao carregar extrato:', err);\r\n        alert('Erro ao carregar o extrato.');\r\n      },\r\n    });\r\n  }\r\n\r\n  carregarDetalhesConta(): void {\r\n    if (!this.contaSelecionada) {\r\n      return;\r\n    }\r\n\r\n    this.contaService.obterDetalhesConta(this.contaSelecionada.idConta).subscribe({\r\n      next: (contaAtualizada) => {\r\n        this.contaSelecionada = contaAtualizada;\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao carregar detalhes da conta:', err);\r\n        alert('Erro ao carregar detalhes da conta.');\r\n      },\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h1>Gerenciamento de Contas</h1>\r\n\r\n  <!-- Lista de contas -->\r\n  <div class=\"contas-section\">\r\n    <h2>Minhas Contas</h2>\r\n    <ul class=\"lista-contas\">\r\n      <li \r\n        *ngFor=\"let conta of contas\" \r\n        [class.selecionada]=\"conta === contaSelecionada\" \r\n        (click)=\"selecionarConta(conta)\">\r\n        Conta {{ conta.idConta }} - {{ conta.nomeTitular }}\r\n      </li>\r\n    </ul>\r\n    <button (click)=\"listarContas()\">Atualizar Contas</button>\r\n  </div>\r\n\r\n  <!-- Detalhes da conta selecionada -->\r\n  <div *ngIf=\"contaSelecionada\" class=\"detalhes-conta\">\r\n    <h2>Detalhes da Conta</h2>\r\n    <p><strong>ID:</strong> {{ contaSelecionada.idConta }}</p>\r\n    <p><strong>Nome do Titular:</strong> {{ contaSelecionada.nomeTitular }}</p>\r\n    <p><strong>Saldo:</strong> {{ contaSelecionada.saldo | currency }}</p>\r\n    <p><strong>Status:</strong> {{ contaSelecionada.status }}</p>\r\n    <p><strong>Data de Criação:</strong> {{ contaSelecionada.dataCriacao | date }}</p>\r\n\r\n    <button (click)=\"carregarDetalhesConta()\">Atualizar Detalhes</button>\r\n  </div>\r\n\r\n  <!-- Criar nova conta -->\r\n  <div class=\"nova-conta\">\r\n    <h2>Criar Nova Conta</h2>\r\n    <input \r\n      type=\"text\" \r\n      [(ngModel)]=\"nomeTitular\" \r\n      placeholder=\"Nome do Titular\" />\r\n    <button (click)=\"criarConta()\">Criar Conta</button>\r\n  </div>\r\n\r\n  <!-- Depósito e Saque -->\r\n  <div *ngIf=\"contaSelecionada\" class=\"operacoes\">\r\n    <h2>Operações</h2>\r\n    <input \r\n      type=\"number\" \r\n      [(ngModel)]=\"valor\" \r\n      placeholder=\"Valor (R$)\" />\r\n    <button (click)=\"realizarDeposito()\">Depósito</button>\r\n    <button (click)=\"realizarSaque()\">Saque</button>\r\n  </div>\r\n\r\n  <!-- Extrato -->\r\n  <div *ngIf=\"contaSelecionada\" class=\"extrato-section\">\r\n    <h2>Extrato</h2>\r\n    <button (click)=\"alternarExtrato()\">\r\n      {{ mostrarExtrato ? 'Ocultar' : 'Exibir' }} Extrato\r\n    </button>\r\n    <div *ngIf=\"mostrarExtrato\">\r\n      <ul>\r\n        <li *ngFor=\"let item of extrato\">\r\n          <strong>Data:</strong> {{ item.data | date }} -\r\n          <strong>Descrição:</strong> {{ item.descricao }} -\r\n          <strong>Valor:</strong> {{ item.valor | currency }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Mensagem de erro -->\r\n  <div *ngIf=\"erro\" class=\"erro-mensagem\">\r\n    <p>Ocorreu um erro ao carregar as contas. Tente novamente.</p>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}