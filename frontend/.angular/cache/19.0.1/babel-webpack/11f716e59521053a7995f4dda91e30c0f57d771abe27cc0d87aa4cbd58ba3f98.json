{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/conta.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ContaComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Nenhuma conta encontrada. Crie uma nova conta:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 2);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_div_3_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.nomeTitular, $event) || (ctx_r1.nomeTitular = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_3_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.criarConta());\n    });\n    i0.ɵɵtext(5, \"Criar Conta\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.nomeTitular);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.nomeTitular.trim());\n  }\n}\nfunction ContaComponent_div_4_div_20_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate3(\" \", item_r4.descricao, \" - R$ \", i0.ɵɵpipeBind2(2, 3, item_r4.valor, \"1.2-2\"), \" em \", i0.ɵɵpipeBind2(3, 6, item_r4.data, \"dd/MM/yyyy\"), \" \");\n  }\n}\nfunction ContaComponent_div_4_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n    i0.ɵɵtext(2, \"Extrato\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, ContaComponent_div_4_div_20_li_4_Template, 4, 9, \"li\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.extrato);\n  }\n}\nfunction ContaComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Detalhes da Conta\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n    i0.ɵɵtext(5, \"Nome do Titular:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\")(8, \"strong\");\n    i0.ɵɵtext(9, \"Saldo:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 4)(13, \"input\", 5);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_div_4_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.valor, $event) || (ctx_r1.valor = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_4_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.realizarDeposito());\n    });\n    i0.ɵɵtext(15, \"Depositar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_4_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.realizarSaque());\n    });\n    i0.ɵɵtext(17, \"Sacar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_4_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.alternarExtrato());\n    });\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(20, ContaComponent_div_4_div_20_Template, 5, 1, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.contaSelecionada.nomeTitular, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" R$ \", i0.ɵɵpipeBind2(11, 7, ctx_r1.contaSelecionada.saldo, \"1.2-2\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.valor);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", ctx_r1.valor <= 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.valor <= 0);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.mostrarExtrato ? \"Ocultar Extrato\" : \"Exibir Extrato\", \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mostrarExtrato);\n  }\n}\nfunction ContaComponent_div_5_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 6);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_5_li_4_Template_li_click_0_listener() {\n      const conta_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.selecionarConta(conta_r6));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const conta_r6 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", conta_r6.nomeTitular, \" \");\n  }\n}\nfunction ContaComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Selecione uma conta para visualizar os detalhes.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, ContaComponent_div_5_li_4_Template, 2, 1, \"li\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.contas);\n  }\n}\nfunction ContaComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Carregando suas contas...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ContaComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2, \"Erro ao carregar as contas. Tente novamente mais tarde.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let ContaComponent = /*#__PURE__*/(() => {\n  class ContaComponent {\n    contaService;\n    contas = []; // Tipando a lista de contas como ContaDTO\n    contaSelecionada = null;\n    nomeTitular = '';\n    valor = 0;\n    mostrarExtrato = false;\n    extrato = [];\n    erro = false; // A propriedade 'erro' agora está sendo usada corretamente\n    constructor(contaService) {\n      this.contaService = contaService;\n    }\n    ngOnInit() {\n      this.listarContas();\n    }\n    listarContas() {\n      this.contaService.listarContasPorUsuario().subscribe(dados => {\n        this.contas = dados;\n        this.erro = false; // Não houve erro, definimos 'erro' como falso\n      }, erro => {\n        console.error('Erro ao listar contas:', erro);\n        this.erro = true; // Se houve erro, definimos 'erro' como verdadeiro\n      });\n    }\n    selecionarConta(conta) {\n      this.contaSelecionada = conta;\n      this.mostrarExtrato = false; // Ocultar extrato ao mudar a conta\n    }\n    // Função para criar a conta\n    criarConta() {\n      const idUsuario = localStorage.getItem('idUsuario');\n      if (!idUsuario) {\n        alert('Usuário não autenticado!');\n        return;\n      }\n      // Verifica se o nome do titular foi fornecido\n      if (!this.nomeTitular.trim()) {\n        alert('Informe o nome do titular para criar a conta.');\n        return;\n      }\n      // Chama o serviço para criar a conta\n      this.contaService.criarConta({\n        nomeTitular: this.nomeTitular\n      }, +idUsuario).subscribe({\n        next: novaConta => {\n          alert('Conta criada com sucesso!');\n          this.contas.push(novaConta); // Adiciona a nova conta à lista\n          this.selecionarConta(novaConta); // Seleciona a nova conta\n        },\n        error: err => {\n          console.error('Erro ao criar conta:', err);\n          alert('Não foi possível criar a conta.');\n        }\n      });\n    }\n    realizarDeposito() {\n      if (!this.contaSelecionada || this.valor <= 0) {\n        alert('Informe um valor válido para depósito.');\n        return;\n      }\n      this.contaService.realizarDeposito(this.contaSelecionada.idConta, this.valor).subscribe({\n        next: () => {\n          alert('Depósito realizado com sucesso!');\n          this.carregarDetalhesConta(); // Atualiza o saldo da conta\n        },\n        error: err => {\n          console.error('Erro ao realizar depósito:', err);\n          alert('Erro ao realizar depósito. Tente novamente mais tarde.');\n        }\n      });\n    }\n    realizarSaque() {\n      if (!this.contaSelecionada || this.valor <= 0) {\n        alert('Informe um valor válido para saque.');\n        return;\n      }\n      this.contaService.realizarSaque(this.contaSelecionada.idConta, this.valor).subscribe({\n        next: () => {\n          alert('Saque realizado com sucesso!');\n          this.carregarDetalhesConta(); // Atualiza o saldo da conta\n        },\n        error: err => {\n          console.error('Erro ao realizar saque:', err);\n          alert('Erro ao realizar saque. Tente novamente mais tarde.');\n        }\n      });\n    }\n    /**\n     * Alterna a exibição do extrato da conta selecionada.\n     */\n    alternarExtrato() {\n      this.mostrarExtrato = !this.mostrarExtrato;\n      if (this.mostrarExtrato) {\n        this.carregarExtrato();\n      }\n    }\n    /**\n     * Carrega o extrato da conta selecionada.\n     */\n    carregarExtrato() {\n      if (!this.contaSelecionada) {\n        return;\n      }\n      this.contaService.getExtrato(this.contaSelecionada.idConta).subscribe({\n        next: extrato => {\n          this.extrato = extrato;\n        },\n        error: err => {\n          console.error('Erro ao obter extrato:', err);\n          alert('Não foi possível carregar o extrato.');\n        }\n      });\n    }\n    /**\n     * Atualiza os detalhes da conta selecionada (como o saldo).\n     */\n    carregarDetalhesConta() {\n      if (!this.contaSelecionada) {\n        return;\n      }\n      this.contaService.obterDetalhesConta(this.contaSelecionada.idConta).subscribe({\n        next: dados => {\n          this.contaSelecionada = dados; // Atualiza os dados da conta selecionada\n        },\n        error: err => {\n          console.error('Erro ao carregar detalhes da conta:', err);\n          alert('Erro ao carregar os detalhes da conta.');\n        }\n      });\n    }\n    static ɵfac = function ContaComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ContaComponent)(i0.ɵɵdirectiveInject(i1.ContaService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ContaComponent,\n      selectors: [[\"app-conta\"]],\n      decls: 8,\n      vars: 5,\n      consts: [[1, \"conta-container\"], [4, \"ngIf\"], [\"placeholder\", \"Nome do Titular\", 3, \"ngModelChange\", \"ngModel\"], [3, \"click\", \"disabled\"], [1, \"form-deposito-saque\"], [\"placeholder\", \"Digite um valor\", \"type\", \"number\", \"min\", \"0\", 3, \"ngModelChange\", \"ngModel\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"erro-mensagem\"]],\n      template: function ContaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Bem-vindo \\u00E0 sua conta!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, ContaComponent_div_3_Template, 6, 2, \"div\", 1)(4, ContaComponent_div_4_Template, 21, 10, \"div\", 1)(5, ContaComponent_div_5_Template, 5, 1, \"div\", 1)(6, ContaComponent_div_6_Template, 3, 0, \"div\", 1)(7, ContaComponent_div_7_Template, 3, 0, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.contas.length === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.contas.length > 0 && ctx.contaSelecionada);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.contas.length > 0 && !ctx.contaSelecionada);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.contas && !ctx.erro);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.erro);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, i2.DecimalPipe, i2.DatePipe, FormsModule, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.MinValidator, i3.NgModel],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return ContaComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtwoWayListener","ContaComponent_div_3_Template_input_ngModelChange_3_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","nomeTitular","ɵɵresetView","ɵɵlistener","ContaComponent_div_3_Template_button_click_4_listener","criarConta","ɵɵadvance","ɵɵtwoWayProperty","ɵɵproperty","trim","ɵɵtextInterpolate3","item_r4","descricao","ɵɵpipeBind2","valor","data","ɵɵtemplate","ContaComponent_div_4_div_20_li_4_Template","extrato","ContaComponent_div_4_Template_input_ngModelChange_13_listener","_r3","ContaComponent_div_4_Template_button_click_14_listener","realizarDeposito","ContaComponent_div_4_Template_button_click_16_listener","realizarSaque","ContaComponent_div_4_Template_button_click_18_listener","alternarExtrato","ContaComponent_div_4_div_20_Template","ɵɵtextInterpolate1","contaSelecionada","saldo","mostrarExtrato","ContaComponent_div_5_li_4_Template_li_click_0_listener","conta_r6","_r5","$implicit","selecionarConta","ContaComponent_div_5_li_4_Template","contas","ContaComponent","contaService","erro","constructor","ngOnInit","listarContas","listarContasPorUsuario","subscribe","dados","console","error","conta","idUsuario","localStorage","getItem","alert","next","novaConta","push","err","idConta","carregarDetalhesConta","carregarExtrato","getExtrato","obterDetalhesConta","ɵɵdirectiveInject","i1","ContaService","selectors","decls","vars","consts","template","ContaComponent_Template","rf","ctx","ContaComponent_div_3_Template","ContaComponent_div_4_Template","ContaComponent_div_5_Template","ContaComponent_div_6_Template","ContaComponent_div_7_Template","length","i2","NgForOf","NgIf","DecimalPipe","DatePipe","i3","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","MinValidator","NgModel","styles"],"sources":["C:\\Users\\Mallmann\\Desktop\\Teste\\frontend\\src\\app\\conta-component\\conta-component.component.ts","C:\\Users\\Mallmann\\Desktop\\Teste\\frontend\\src\\app\\conta-component\\conta-component.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ContaService } from '../services/conta.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ContaDTO } from '../conta.model';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-conta',\r\n  templateUrl: './conta-component.component.html',\r\n  styleUrls: ['./conta-component.component.css'],\r\n  imports: [CommonModule, FormsModule],\r\n})\r\nexport class ContaComponent implements OnInit {\r\n  contas: ContaDTO[] = [];  // Tipando a lista de contas como ContaDTO\r\n  contaSelecionada: ContaDTO | null = null;\r\n  nomeTitular: string = '';\r\n  valor: number = 0;\r\n  mostrarExtrato: boolean = false;\r\n  extrato: any[] = [];\r\n  erro: boolean = false;  // A propriedade 'erro' agora está sendo usada corretamente\r\n\r\n  constructor(private contaService: ContaService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.listarContas();\r\n  }\r\n\r\n  listarContas(): void {\r\n    this.contaService.listarContasPorUsuario().subscribe(\r\n      (dados: ContaDTO[]) => {\r\n        this.contas = dados;\r\n        this.erro = false;  // Não houve erro, definimos 'erro' como falso\r\n      },\r\n      (erro) => {\r\n        console.error('Erro ao listar contas:', erro);\r\n        this.erro = true;  // Se houve erro, definimos 'erro' como verdadeiro\r\n      }\r\n    );\r\n  }\r\n\r\n  selecionarConta(conta: ContaDTO): void {\r\n    this.contaSelecionada = conta;\r\n    this.mostrarExtrato = false; // Ocultar extrato ao mudar a conta\r\n  }\r\n\r\n  // Função para criar a conta\r\n  criarConta(): void {\r\n    const idUsuario = localStorage.getItem('idUsuario');\r\n    if (!idUsuario) {\r\n      alert('Usuário não autenticado!');\r\n      return;\r\n    }\r\n\r\n    // Verifica se o nome do titular foi fornecido\r\n    if (!this.nomeTitular.trim()) {\r\n      alert('Informe o nome do titular para criar a conta.');\r\n      return;\r\n    }\r\n\r\n    // Chama o serviço para criar a conta\r\n    this.contaService.criarConta({ nomeTitular: this.nomeTitular }, +idUsuario).subscribe({\r\n      next: (novaConta: ContaDTO) => {\r\n        alert('Conta criada com sucesso!');\r\n        this.contas.push(novaConta); // Adiciona a nova conta à lista\r\n        this.selecionarConta(novaConta); // Seleciona a nova conta\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao criar conta:', err);\r\n        alert('Não foi possível criar a conta.');\r\n      },\r\n    });\r\n  }\r\n  \r\n  realizarDeposito(): void {\r\n    if (!this.contaSelecionada || this.valor <= 0) {\r\n      alert('Informe um valor válido para depósito.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.realizarDeposito(this.contaSelecionada.idConta, this.valor).subscribe({\r\n      next: () => {\r\n        alert('Depósito realizado com sucesso!');\r\n        this.carregarDetalhesConta(); // Atualiza o saldo da conta\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao realizar depósito:', err);\r\n        alert('Erro ao realizar depósito. Tente novamente mais tarde.');\r\n      },\r\n    });\r\n  }\r\n  \r\n  realizarSaque(): void {\r\n    if (!this.contaSelecionada || this.valor <= 0) {\r\n      alert('Informe um valor válido para saque.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.realizarSaque(this.contaSelecionada.idConta, this.valor).subscribe({\r\n      next: () => {\r\n        alert('Saque realizado com sucesso!');\r\n        this.carregarDetalhesConta(); // Atualiza o saldo da conta\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao realizar saque:', err);\r\n        alert('Erro ao realizar saque. Tente novamente mais tarde.');\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Alterna a exibição do extrato da conta selecionada.\r\n   */\r\n  alternarExtrato(): void {\r\n    this.mostrarExtrato = !this.mostrarExtrato;\r\n    if (this.mostrarExtrato) {\r\n      this.carregarExtrato();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Carrega o extrato da conta selecionada.\r\n   */\r\n  carregarExtrato(): void {\r\n    if (!this.contaSelecionada) {\r\n      return;\r\n    }\r\n\r\n    this.contaService.getExtrato(this.contaSelecionada.idConta).subscribe({\r\n      next: (extrato) => {\r\n        this.extrato = extrato;\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao obter extrato:', err);\r\n        alert('Não foi possível carregar o extrato.');\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Atualiza os detalhes da conta selecionada (como o saldo).\r\n   */\r\n  carregarDetalhesConta(): void {\r\n    if (!this.contaSelecionada) {\r\n      return;\r\n    }\r\n\r\n    this.contaService.obterDetalhesConta(this.contaSelecionada.idConta).subscribe({\r\n      next: (dados) => {\r\n        this.contaSelecionada = dados; // Atualiza os dados da conta selecionada\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao carregar detalhes da conta:', err);\r\n        alert('Erro ao carregar os detalhes da conta.');\r\n      },\r\n    });\r\n  }\r\n}\r\n","<div class=\"conta-container\">\r\n  <h2>Bem-vindo à sua conta!</h2>\r\n\r\n  <!-- Se não houver contas, permite ao usuário criar uma nova -->\r\n  <div *ngIf=\"contas.length === 0\">\r\n    <h3>Nenhuma conta encontrada. Crie uma nova conta:</h3>\r\n    <input [(ngModel)]=\"nomeTitular\" placeholder=\"Nome do Titular\" />\r\n    <button (click)=\"criarConta()\" [disabled]=\"!nomeTitular.trim()\">Criar Conta</button>\r\n  </div>\r\n\r\n  <!-- Se houver contas e uma conta selecionada, exibe os detalhes da conta -->\r\n  <div *ngIf=\"contas.length > 0 && contaSelecionada\">\r\n    <h3>Detalhes da Conta</h3>\r\n    <p><strong>Nome do Titular:</strong> {{ contaSelecionada.nomeTitular }}</p>\r\n    <p><strong>Saldo:</strong> R$ {{ contaSelecionada.saldo | number:'1.2-2' }}</p>\r\n\r\n    <!-- Formulário para realizar depósito ou saque -->\r\n    <div class=\"form-deposito-saque\">\r\n      <input [(ngModel)]=\"valor\" placeholder=\"Digite um valor\" type=\"number\" min=\"0\" />\r\n      <button (click)=\"realizarDeposito()\" [disabled]=\"valor <= 0\">Depositar</button>\r\n      <button (click)=\"realizarSaque()\" [disabled]=\"valor <= 0\">Sacar</button>\r\n    </div>\r\n\r\n    <!-- Botão para alternar a exibição do extrato -->\r\n    <button (click)=\"alternarExtrato()\">\r\n      {{ mostrarExtrato ? 'Ocultar Extrato' : 'Exibir Extrato' }}\r\n    </button>\r\n\r\n    <!-- Exibe o extrato da conta, se solicitado -->\r\n    <div *ngIf=\"mostrarExtrato\">\r\n      <h4>Extrato</h4>\r\n      <ul>\r\n        <li *ngFor=\"let item of extrato\">\r\n          {{ item.descricao }} - R$ {{ item.valor | number:'1.2-2' }} em {{ item.data | date:'dd/MM/yyyy' }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Caso o usuário não tenha selecionado uma conta, exibe uma lista de contas para seleção -->\r\n  <div *ngIf=\"contas.length > 0 && !contaSelecionada\">\r\n    <h3>Selecione uma conta para visualizar os detalhes.</h3>\r\n    <ul>\r\n      <li *ngFor=\"let conta of contas\" (click)=\"selecionarConta(conta)\">\r\n        {{ conta.nomeTitular }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <!-- Se as contas estiverem carregando ou houver erro, exibe uma mensagem -->\r\n  <div *ngIf=\"!contas && !erro\">\r\n    <p>Carregando suas contas...</p>\r\n  </div>\r\n\r\n  <div *ngIf=\"erro\">\r\n    <p class=\"erro-mensagem\">Erro ao carregar as contas. Tente novamente mais tarde.</p>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}