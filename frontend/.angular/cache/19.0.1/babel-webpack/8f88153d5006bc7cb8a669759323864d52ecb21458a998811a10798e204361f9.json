{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    salvarIdUsuario(id) {\n      localStorage.setItem('idUsuario', id.toString());\n    }\n    getIdUsuario() {\n      const id = localStorage.getItem('idUsuario');\n      return id ? parseInt(id, 10) : null;\n    }\n    // Verifica se o usuário está logado (id != null)\n    isUsuarioLogado() {\n      return this.idUsuario !== null;\n    }\n    static ɵfac = function UserService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || UserService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UserService;\n})();","map":{"version":3,"names":["UserService","salvarIdUsuario","id","localStorage","setItem","toString","getIdUsuario","getItem","parseInt","isUsuarioLogado","idUsuario","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mallmann\\Desktop\\Tentativa\\frontend\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n\r\n  salvarIdUsuario(id: number): void {\r\n    localStorage.setItem('idUsuario', id.toString());\r\n  }\r\n\r\n  getIdUsuario(): number | null {\r\n    const id = localStorage.getItem('idUsuario');\r\n    return id ? parseInt(id, 10) : null;\r\n  }\r\n\r\n  // Verifica se o usuário está logado (id != null)\r\n  isUsuarioLogado(): boolean {\r\n    return this.idUsuario !== null;\r\n  }\r\n}\r\n\r\n"],"mappings":";AAKA,WAAaA,WAAW;EAAlB,MAAOA,WAAW;IAEtBC,eAAeA,CAACC,EAAU;MACxBC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEF,EAAE,CAACG,QAAQ,EAAE,CAAC;IAClD;IAEAC,YAAYA,CAAA;MACV,MAAMJ,EAAE,GAAGC,YAAY,CAACI,OAAO,CAAC,WAAW,CAAC;MAC5C,OAAOL,EAAE,GAAGM,QAAQ,CAACN,EAAE,EAAE,EAAE,CAAC,GAAG,IAAI;IACrC;IAEA;IACAO,eAAeA,CAAA;MACb,OAAO,IAAI,CAACC,SAAS,KAAK,IAAI;IAChC;;uCAdWV,WAAW;IAAA;;aAAXA,WAAW;MAAAW,OAAA,EAAXX,WAAW,CAAAY,IAAA;MAAAC,UAAA,EAFV;IAAM;;SAEPb,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}