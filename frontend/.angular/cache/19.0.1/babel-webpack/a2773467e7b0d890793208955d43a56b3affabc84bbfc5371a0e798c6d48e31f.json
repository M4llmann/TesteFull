{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/conta.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ContaComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Nenhuma conta encontrada. Crie uma nova conta:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 2);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_div_3_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.nomeTitular, $event) || (ctx_r1.nomeTitular = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_3_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.criarConta());\n    });\n    i0.ɵɵtext(5, \"Criar Conta\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.nomeTitular);\n  }\n}\nfunction ContaComponent_div_4_div_18_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate3(\" \", item_r4.descricao, \" - R$ \", item_r4.valor, \" em \", item_r4.data, \" \");\n  }\n}\nfunction ContaComponent_div_4_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n    i0.ɵɵtext(2, \"Extrato\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, ContaComponent_div_4_div_18_li_4_Template, 2, 3, \"li\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.extrato);\n  }\n}\nfunction ContaComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Detalhes da Conta\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n    i0.ɵɵtext(5, \"Nome do Titular:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\")(8, \"strong\");\n    i0.ɵɵtext(9, \"Saldo:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"input\", 4);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_div_4_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.valor, $event) || (ctx_r1.valor = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_4_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.realizarDeposito());\n    });\n    i0.ɵɵtext(13, \"Depositar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_4_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.realizarSaque());\n    });\n    i0.ɵɵtext(15, \"Sacar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_4_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.alternarExtrato());\n    });\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, ContaComponent_div_4_div_18_Template, 5, 1, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.contaSelecionada == null ? null : ctx_r1.contaSelecionada.nomeTitular, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" R$ \", ctx_r1.contaSelecionada == null ? null : ctx_r1.contaSelecionada.saldo, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.valor);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.mostrarExtrato ? \"Ocultar Extrato\" : \"Exibir Extrato\", \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mostrarExtrato);\n  }\n}\nexport let ContaComponent = /*#__PURE__*/(() => {\n  class ContaComponent {\n    contaService;\n    route;\n    contas = [];\n    contaSelecionada = null; // Representa a conta ativa\n    nomeTitular = '';\n    valor = 0;\n    mostrarExtrato = false;\n    extrato = [];\n    constructor(contaService, route) {\n      this.contaService = contaService;\n      this.route = route;\n    }\n    ngOnInit() {\n      this.carregarContas();\n    }\n    carregarContas() {\n      const idUsuario = localStorage.getItem('idUsuario');\n      if (!idUsuario) {\n        alert('Usuário não autenticado!');\n        return;\n      }\n      // Chama o serviço para listar as contas do usuário\n      this.contaService.listarContas([+idUsuario]).subscribe({\n        next: contas => {\n          this.contas = contas;\n          if (contas.length > 0) {\n            this.contaSelecionada = contas[0]; // Seleciona a primeira conta por padrão\n            this.carregarDetalhesConta();\n          }\n        },\n        error: err => console.error('Erro ao listar contas:', err)\n      });\n    }\n    carregarDetalhesConta() {\n      if (this.contaSelecionada) {\n        const idConta = this.contaSelecionada.idConta;\n        this.contaService.getSaldo(idConta).subscribe({\n          next: saldo => this.contaSelecionada.saldo = saldo,\n          error: err => console.error('Erro ao obter saldo:', err)\n        });\n        if (this.mostrarExtrato) {\n          this.contaService.getExtrato(idConta).subscribe({\n            next: extrato => this.extrato = extrato,\n            error: err => console.error('Erro ao obter extrato:', err)\n          });\n        }\n      }\n    }\n    criarConta() {\n      const idUsuario = localStorage.getItem('idUsuario');\n      if (!idUsuario) {\n        alert('Usuário não autenticado!');\n        return;\n      }\n      if (!this.nomeTitular.trim()) {\n        alert('Informe o nome do titular para criar a conta.');\n        return;\n      }\n      this.contaService.criarConta({\n        nomeTitular: this.nomeTitular,\n        status: 'ATIVA'\n      }, +idUsuario).subscribe({\n        next: novaConta => {\n          alert('Conta criada com sucesso!');\n          this.contas.push(novaConta);\n          this.contaSelecionada = novaConta;\n          this.carregarDetalhesConta();\n        },\n        error: err => console.error('Erro ao criar conta:', err)\n      });\n    }\n    realizarDeposito() {\n      if (!this.contaSelecionada || this.valor <= 0) {\n        alert('Informe um valor válido para depósito.');\n        return;\n      }\n      this.contaService.realizarDeposito(this.contaSelecionada.idConta, this.valor).subscribe({\n        next: () => {\n          alert('Depósito realizado com sucesso!');\n          this.carregarDetalhesConta();\n        },\n        error: err => console.error('Erro ao realizar depósito:', err)\n      });\n    }\n    realizarSaque() {\n      if (!this.contaSelecionada || this.valor <= 0) {\n        alert('Informe um valor válido para saque.');\n        return;\n      }\n      this.contaService.realizarSaque(this.contaSelecionada.idConta, this.valor).subscribe({\n        next: () => {\n          alert('Saque realizado com sucesso!');\n          this.carregarDetalhesConta();\n        },\n        error: err => console.error('Erro ao realizar saque:', err)\n      });\n    }\n    alternarExtrato() {\n      this.mostrarExtrato = !this.mostrarExtrato;\n      if (this.mostrarExtrato) {\n        this.carregarDetalhesConta();\n      }\n    }\n    static ɵfac = function ContaComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ContaComponent)(i0.ɵɵdirectiveInject(i1.ContaService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ContaComponent,\n      selectors: [[\"app-conta\"]],\n      decls: 5,\n      vars: 2,\n      consts: [[1, \"conta-container\"], [4, \"ngIf\"], [\"placeholder\", \"Nome do Titular\", 3, \"ngModelChange\", \"ngModel\"], [3, \"click\"], [\"placeholder\", \"Digite um valor\", \"type\", \"number\", 3, \"ngModelChange\", \"ngModel\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function ContaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Bem-vindo \\u00E0 sua conta!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, ContaComponent_div_3_Template, 6, 1, \"div\", 1)(4, ContaComponent_div_4_Template, 19, 5, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.contas.length === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.contas.length > 0);\n        }\n      },\n      dependencies: [CommonModule, i3.NgForOf, i3.NgIf, FormsModule, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgModel],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return ContaComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtwoWayListener","ContaComponent_div_3_Template_input_ngModelChange_3_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","nomeTitular","ɵɵresetView","ɵɵlistener","ContaComponent_div_3_Template_button_click_4_listener","criarConta","ɵɵadvance","ɵɵtwoWayProperty","ɵɵtextInterpolate3","item_r4","descricao","valor","data","ɵɵtemplate","ContaComponent_div_4_div_18_li_4_Template","ɵɵproperty","extrato","ContaComponent_div_4_Template_input_ngModelChange_11_listener","_r3","ContaComponent_div_4_Template_button_click_12_listener","realizarDeposito","ContaComponent_div_4_Template_button_click_14_listener","realizarSaque","ContaComponent_div_4_Template_button_click_16_listener","alternarExtrato","ContaComponent_div_4_div_18_Template","ɵɵtextInterpolate1","contaSelecionada","saldo","mostrarExtrato","ContaComponent","contaService","route","contas","constructor","ngOnInit","carregarContas","idUsuario","localStorage","getItem","alert","listarContas","subscribe","next","length","carregarDetalhesConta","error","err","console","idConta","getSaldo","getExtrato","trim","status","novaConta","push","ɵɵdirectiveInject","i1","ContaService","i2","ActivatedRoute","selectors","decls","vars","consts","template","ContaComponent_Template","rf","ctx","ContaComponent_div_3_Template","ContaComponent_div_4_Template","i3","NgForOf","NgIf","i4","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgModel","styles"],"sources":["C:\\Users\\Mallmann\\Desktop\\Teste\\frontend\\src\\app\\conta-component\\conta-component.component.ts","C:\\Users\\Mallmann\\Desktop\\Teste\\frontend\\src\\app\\conta-component\\conta-component.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ContaService } from '../services/conta.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ContaDTO } from '../conta.model';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-conta',\r\n  templateUrl: './conta-component.component.html',\r\n  styleUrls: ['./conta-component.component.css'],\r\n  imports: [CommonModule, FormsModule],\r\n})\r\nexport class ContaComponent implements OnInit {\r\n  contas: ContaDTO[] = [];\r\n  contaSelecionada: ContaDTO | null = null; // Representa a conta ativa\r\n  nomeTitular: string = '';\r\n  valor: number = 0;\r\n  mostrarExtrato: boolean = false;\r\n  extrato: any[] = [];\r\n\r\n  constructor(private contaService: ContaService, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.carregarContas();\r\n  }\r\n\r\n  carregarContas(): void {\r\n    const idUsuario = localStorage.getItem('idUsuario');\r\n    if (!idUsuario) {\r\n      alert('Usuário não autenticado!');\r\n      return;\r\n    }\r\n\r\n    // Chama o serviço para listar as contas do usuário\r\n    this.contaService.listarContas([+idUsuario]).subscribe({\r\n      next: (contas) => {\r\n        this.contas = contas;\r\n        if (contas.length > 0) {\r\n          this.contaSelecionada = contas[0]; // Seleciona a primeira conta por padrão\r\n          this.carregarDetalhesConta();\r\n        }\r\n      },\r\n      error: (err) => console.error('Erro ao listar contas:', err),\r\n    });\r\n  }\r\n\r\n  carregarDetalhesConta(): void {\r\n    if (this.contaSelecionada) {\r\n      const idConta = this.contaSelecionada.idConta;\r\n      this.contaService.getSaldo(idConta).subscribe({\r\n        next: (saldo) => (this.contaSelecionada!.saldo = saldo),\r\n        error: (err) => console.error('Erro ao obter saldo:', err),\r\n      });\r\n\r\n      if (this.mostrarExtrato) {\r\n        this.contaService.getExtrato(idConta).subscribe({\r\n          next: (extrato) => (this.extrato = extrato),\r\n          error: (err) => console.error('Erro ao obter extrato:', err),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  criarConta(): void {\r\n    const idUsuario = localStorage.getItem('idUsuario');\r\n    if (!idUsuario) {\r\n      alert('Usuário não autenticado!');\r\n      return;\r\n    }\r\n\r\n    if (!this.nomeTitular.trim()) {\r\n      alert('Informe o nome do titular para criar a conta.');\r\n      return;\r\n    }\r\n\r\n    this.contaService\r\n      .criarConta({ nomeTitular: this.nomeTitular, status: 'ATIVA' }, +idUsuario)\r\n      .subscribe({\r\n        next: (novaConta) => {\r\n          alert('Conta criada com sucesso!');\r\n          this.contas.push(novaConta);\r\n          this.contaSelecionada = novaConta;\r\n          this.carregarDetalhesConta();\r\n        },\r\n        error: (err) => console.error('Erro ao criar conta:', err),\r\n      });\r\n  }\r\n\r\n  realizarDeposito(): void {\r\n    if (!this.contaSelecionada || this.valor <= 0) {\r\n      alert('Informe um valor válido para depósito.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.realizarDeposito(this.contaSelecionada.idConta, this.valor).subscribe({\r\n      next: () => {\r\n        alert('Depósito realizado com sucesso!');\r\n        this.carregarDetalhesConta();\r\n      },\r\n      error: (err) => console.error('Erro ao realizar depósito:', err),\r\n    });\r\n  }\r\n\r\n  realizarSaque(): void {\r\n    if (!this.contaSelecionada || this.valor <= 0) {\r\n      alert('Informe um valor válido para saque.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.realizarSaque(this.contaSelecionada.idConta, this.valor).subscribe({\r\n      next: () => {\r\n        alert('Saque realizado com sucesso!');\r\n        this.carregarDetalhesConta();\r\n      },\r\n      error: (err) => console.error('Erro ao realizar saque:', err),\r\n    });\r\n  }\r\n\r\n  alternarExtrato(): void {\r\n    this.mostrarExtrato = !this.mostrarExtrato;\r\n    if (this.mostrarExtrato) {\r\n      this.carregarDetalhesConta();\r\n    }\r\n  }\r\n}\r\n","<div class=\"conta-container\">\r\n  <h2>Bem-vindo à sua conta!</h2>\r\n\r\n  <div *ngIf=\"contas.length === 0\">\r\n    <h3>Nenhuma conta encontrada. Crie uma nova conta:</h3>\r\n    <input [(ngModel)]=\"nomeTitular\" placeholder=\"Nome do Titular\" />\r\n    <button (click)=\"criarConta()\">Criar Conta</button>\r\n  </div>\r\n\r\n  <div *ngIf=\"contas.length > 0\">\r\n    <h3>Detalhes da Conta</h3>\r\n    <p><strong>Nome do Titular:</strong> {{ contaSelecionada?.nomeTitular }}</p>\r\n    <p><strong>Saldo:</strong> R$ {{ contaSelecionada?.saldo }}</p>\r\n\r\n    <input [(ngModel)]=\"valor\" placeholder=\"Digite um valor\" type=\"number\" />\r\n    <button (click)=\"realizarDeposito()\">Depositar</button>\r\n    <button (click)=\"realizarSaque()\">Sacar</button>\r\n    <button (click)=\"alternarExtrato()\">\r\n      {{ mostrarExtrato ? 'Ocultar Extrato' : 'Exibir Extrato' }}\r\n    </button>\r\n\r\n    <div *ngIf=\"mostrarExtrato\">\r\n      <h4>Extrato</h4>\r\n      <ul>\r\n        <li *ngFor=\"let item of extrato\">\r\n          {{ item.descricao }} - R$ {{ item.valor }} em {{ item.data }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}