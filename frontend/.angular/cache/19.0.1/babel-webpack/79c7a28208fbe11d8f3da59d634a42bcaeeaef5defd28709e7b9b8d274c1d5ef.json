{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    intercept(req, next) {\n      const token = localStorage.getItem('token');\n      if (token) {\n        console.log('Token:', token);\n        const cloned = req.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        return next.handle(cloned);\n      }\n      return next.handle(req);\n    }\n    static ɵfac = function AuthInterceptor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthInterceptor)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthInterceptor,\n      factory: AuthInterceptor.ɵfac\n    });\n  }\n  return AuthInterceptor;\n})();","map":{"version":3,"names":["AuthInterceptor","intercept","req","next","token","localStorage","getItem","console","log","cloned","clone","setHeaders","Authorization","handle","factory","ɵfac"],"sources":["C:\\Users\\Mallmann\\Desktop\\TesteFull\\frontend\\src\\app\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = localStorage.getItem('token');\n    if (token) {\n      console.log('Token:', token);\n      const cloned = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      return next.handle(cloned);\n    }\n    return next.handle(req);\n  }\n}"],"mappings":";AAKA,WAAaA,eAAe;EAAtB,MAAOA,eAAe;IAC1BC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;MAChD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACTG,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,KAAK,CAAC;QAC5B,MAAMK,MAAM,GAAGP,GAAG,CAACQ,KAAK,CAAC;UACvBC,UAAU,EAAE;YACVC,aAAa,EAAE,UAAUR,KAAK;;SAEjC,CAAC;QACF,OAAOD,IAAI,CAACU,MAAM,CAACJ,MAAM,CAAC;MAC5B;MACA,OAAON,IAAI,CAACU,MAAM,CAACX,GAAG,CAAC;IACzB;;uCAbWF,eAAe;IAAA;;aAAfA,eAAe;MAAAc,OAAA,EAAfd,eAAe,CAAAe;IAAA;;SAAff,eAAe;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}