{"ast":null,"code":"import { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/usuario.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/user.service\";\nimport * as i4 from \"@angular/forms\";\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    usuarioService;\n    router;\n    userService;\n    email = '';\n    senha = '';\n    constructor(usuarioService, router, userService) {\n      this.usuarioService = usuarioService;\n      this.router = router;\n      this.userService = userService;\n    }\n    cadastrar() {\n      if (!this.email || !this.senha) {\n        alert('Preencha todos os campos!');\n        return;\n      }\n      const usuarioDTO = {\n        email: this.email,\n        senha: this.senha\n      };\n      this.usuarioService.criarUsuario(usuarioDTO).subscribe({\n        next: usuario => {\n          this.userService.salvarIdUsuario(usuario);\n          alert('Cadastro realizado com sucesso!');\n          this.router.navigate(['/conta']);\n        },\n        error: err => {\n          console.error('Erro ao cadastrar usuário', err);\n          alert('Erro ao realizar o cadastro. Tente novamente.');\n        }\n      });\n    }\n    login() {\n      if (!this.email || !this.senha) {\n        alert('Preencha todos os campos!');\n        return;\n      }\n      this.usuarioService.buscarUsuarioPorEmail(this.email).subscribe({\n        next: usuario => {\n          this.userService.salvarIdUsuario(usuario);\n          alert('Login realizado com sucesso!');\n          this.router.navigate(['/conta']);\n        },\n        error: err => {\n          console.error('Erro ao buscar usuário', err);\n          alert('Usuário não encontrado.');\n        }\n      });\n    }\n    static ɵfac = function HomeComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HomeComponent)(i0.ɵɵdirectiveInject(i1.UsuarioService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: HomeComponent,\n      selectors: [[\"app-home\"]],\n      decls: 17,\n      vars: 2,\n      consts: [[3, \"ngSubmit\"], [\"for\", \"email\"], [\"id\", \"email\", \"name\", \"email\", \"type\", \"email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"senha\"], [\"id\", \"senha\", \"name\", \"senha\", \"type\", \"password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"submit\"], [\"routerLink\", \"/conta\"]],\n      template: function HomeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h1\");\n          i0.ɵɵtext(1, \"Bem-vindo ao Banco\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.cadastrar();\n          });\n          i0.ɵɵelementStart(3, \"label\", 1);\n          i0.ɵɵtext(4, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"input\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_5_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"label\", 3);\n          i0.ɵɵtext(7, \"Senha:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_8_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.senha, $event) || (ctx.senha = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_9_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵtext(10, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"button\", 6);\n          i0.ɵɵtext(12, \"Cadastrar\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"h1\");\n          i0.ɵɵtext(14, \"Bem-vindo ao Banco\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"a\", 7);\n          i0.ɵɵtext(16, \"Ir para Conta\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.senha);\n        }\n      },\n      dependencies: [FormsModule, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return HomeComponent;\n})();","map":{"version":3,"names":["FormsModule","HomeComponent","usuarioService","router","userService","email","senha","constructor","cadastrar","alert","usuarioDTO","criarUsuario","subscribe","next","usuario","salvarIdUsuario","navigate","error","err","console","login","buscarUsuarioPorEmail","i0","ɵɵdirectiveInject","i1","UsuarioService","i2","Router","i3","UserService","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","HomeComponent_Template_form_ngSubmit_2_listener","ɵɵtwoWayListener","HomeComponent_Template_input_ngModelChange_5_listener","$event","ɵɵtwoWayBindingSet","HomeComponent_Template_input_ngModelChange_8_listener","HomeComponent_Template_button_click_9_listener","ɵɵadvance","ɵɵtwoWayProperty","i4","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","styles"],"sources":["C:\\Users\\Mallmann\\Desktop\\Tentativa\\frontend\\src\\app\\home\\home.component.ts","C:\\Users\\Mallmann\\Desktop\\Tentativa\\frontend\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UsuarioService } from '../services/usuario.service';\r\nimport { UserService } from '../services/user.service';\r\nimport { Usuario } from '../usuario.model'; // Importando a interface\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n  imports: [FormsModule],\r\n})\r\nexport class HomeComponent {\r\n  email: string = '';\r\n  senha: string = '';\r\n\r\n  constructor(\r\n    private usuarioService: UsuarioService,\r\n    private router: Router,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  cadastrar(): void {\r\n    if (!this.email || !this.senha) {\r\n      alert('Preencha todos os campos!');\r\n      return;\r\n    }\r\n\r\n    const usuarioDTO = {\r\n      email: this.email,\r\n      senha: this.senha,\r\n    };\r\n\r\n    this.usuarioService.criarUsuario(usuarioDTO).subscribe({\r\n      next: (usuario: Usuario) => {  // Usando a interface 'Usuario'\r\n        this.userService.salvarIdUsuario(usuario); \r\n        alert('Cadastro realizado com sucesso!');\r\n        this.router.navigate(['/conta']);\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao cadastrar usuário', err);\r\n        alert('Erro ao realizar o cadastro. Tente novamente.');\r\n      },\r\n    });\r\n  }\r\n\r\n  login(): void {\r\n    if (!this.email || !this.senha) {\r\n      alert('Preencha todos os campos!');\r\n      return;\r\n    }\r\n\r\n    this.usuarioService.buscarUsuarioPorEmail(this.email).subscribe({\r\n      next: (usuario: Usuario) => {  // Usando a interface 'Usuario'\r\n        this.userService.salvarIdUsuario(usuario); \r\n        alert('Login realizado com sucesso!');\r\n        this.router.navigate(['/conta']);\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao buscar usuário', err);\r\n        alert('Usuário não encontrado.');\r\n      },\r\n    });\r\n  }\r\n}\r\n","<h1>Bem-vindo ao Banco</h1>\r\n<form (ngSubmit)=\"cadastrar()\">\r\n  <label for=\"email\">Email:</label>\r\n  <input id=\"email\" [(ngModel)]=\"email\" name=\"email\" type=\"email\" required />\r\n\r\n  <label for=\"senha\">Senha:</label>\r\n  <input id=\"senha\" [(ngModel)]=\"senha\" name=\"senha\" type=\"password\" required />\r\n\r\n  <button type=\"button\" (click)=\"login()\">Login</button>\r\n  <button type=\"submit\">Cadastrar</button>\r\n</form>\r\n<h1>Bem-vindo ao Banco</h1>\r\n<a routerLink=\"/conta\">Ir para Conta</a>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}