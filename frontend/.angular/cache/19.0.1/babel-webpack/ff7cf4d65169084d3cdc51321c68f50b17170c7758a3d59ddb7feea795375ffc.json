{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/conta.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ContaComponent_div_3_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 3);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_3_li_4_Template_li_click_0_listener() {\n      const conta_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.selecionarConta(conta_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const conta_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", conta_r2.nomeTitular, \" - Saldo: \", i0.ɵɵpipeBind1(2, 2, conta_r2.saldo), \" \");\n  }\n}\nfunction ContaComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Contas Dispon\\u00EDveis\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, ContaComponent_div_3_li_4_Template, 3, 4, \"li\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.contas);\n  }\n}\nfunction ContaComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Voc\\u00EA n\\u00E3o possui contas. Crie uma nova conta.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ContaComponent_div_11_div_22_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate3(\" \", item_r5.data, \" - \", item_r5.descricao, \" - \", i0.ɵɵpipeBind1(2, 3, item_r5.valor), \" \");\n  }\n}\nfunction ContaComponent_div_11_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n    i0.ɵɵtext(2, \"Extrato da Conta\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, ContaComponent_div_11_div_22_li_4_Template, 3, 5, \"li\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.extrato);\n  }\n}\nfunction ContaComponent_div_11_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_11_div_23_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.realizarDeposito());\n    });\n    i0.ɵɵtext(2, \"Depositar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_11_div_23_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.realizarSaque());\n    });\n    i0.ɵɵtext(4, \"Sacar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_11_div_23_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.alternarExtrato());\n    });\n    i0.ɵɵtext(6, \"Extrato\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ContaComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Detalhes da Conta\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n    i0.ɵɵtext(5, \"Nome do Titular:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\")(8, \"strong\");\n    i0.ɵɵtext(9, \"Saldo:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\")(13, \"label\", 6);\n    i0.ɵɵtext(14, \"Valor:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"input\", 7);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_div_11_Template_input_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.valor, $event) || (ctx_r2.valor = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_11_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.realizarDeposito());\n    });\n    i0.ɵɵtext(17, \"Realizar Dep\\u00F3sito\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_11_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.realizarSaque());\n    });\n    i0.ɵɵtext(19, \"Realizar Saque\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_11_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.alternarExtrato());\n    });\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(22, ContaComponent_div_11_div_22_Template, 5, 1, \"div\", 1)(23, ContaComponent_div_11_div_23_Template, 7, 0, \"div\", 1);\n    i0.ɵɵelementStart(24, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_11_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.carregarDetalhesConta());\n    });\n    i0.ɵɵtext(25, \"Carregar Detalhes\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.contaSelecionada.nomeTitular, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(11, 6, ctx_r2.contaSelecionada.saldo), \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.valor);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.mostrarExtrato ? \"Ocultar\" : \"Exibir\", \" Extrato \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.mostrarExtrato);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.contaSelecionada);\n  }\n}\nfunction ContaComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"p\");\n    i0.ɵɵtext(2, \"Ocorreu um erro. Tente novamente mais tarde.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let ContaComponent = /*#__PURE__*/(() => {\n  class ContaComponent {\n    contaService;\n    contas = [];\n    contaSelecionada = null;\n    nomeTitular = '';\n    valor = 0;\n    mostrarExtrato = false;\n    extrato = [];\n    erro = false;\n    constructor(contaService) {\n      this.contaService = contaService;\n    }\n    ngOnInit() {\n      this.listarContas();\n    }\n    listarContas() {\n      const idUsuario = localStorage.getItem('idUsuario');\n      if (!idUsuario) {\n        alert('Usuário não autenticado! Faça login para listar as contas.');\n        return;\n      }\n      this.contaService.listarContasPorUsuario().subscribe({\n        next: dados => {\n          console.log('Contas retornadas pelo backend:', dados);\n          this.contas = dados;\n          this.erro = false;\n        },\n        error: err => {\n          console.error('Erro ao listar contas:', err);\n          this.erro = true;\n          alert('Não foi possível listar as contas.');\n        }\n      });\n    }\n    selecionarConta(conta) {\n      this.contaSelecionada = conta;\n      this.mostrarExtrato = false; // Ocultar extrato ao selecionar outra conta\n    }\n    criarConta() {\n      const idUsuario = localStorage.getItem('idUsuario');\n      if (!idUsuario) {\n        alert('Usuário não autenticado!');\n        return;\n      }\n      if (!this.nomeTitular.trim()) {\n        alert('Informe o nome do titular para criar a conta.');\n        return;\n      }\n      this.contaService.criarConta({\n        nomeTitular: this.nomeTitular\n      }, +idUsuario).subscribe({\n        next: novaConta => {\n          console.log('Resposta da API (novaConta):', novaConta); // Verifique o que está sendo retornado\n          alert('Conta criada com sucesso!');\n          if (novaConta) {\n            this.contas.push(novaConta); // Adiciona a nova conta à lista\n            this.selecionarConta(novaConta); // Seleciona a conta automaticamente\n          } else {\n            console.error('Erro: A resposta da API não contém uma conta válida.');\n          }\n        },\n        error: err => {\n          console.error('Erro ao criar conta:', err);\n          alert('Erro ao criar a conta.');\n        }\n      });\n    }\n    realizarDeposito() {\n      if (!this.contaSelecionada || this.valor <= 0) {\n        alert('Informe um valor válido para depósito.');\n        return;\n      }\n      this.contaService.realizarDeposito(this.contaSelecionada.idConta, this.valor).subscribe({\n        next: contaAtualizada => {\n          alert('Depósito realizado com sucesso!');\n          this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\n          this.valor = 0; // Limpa o campo de valor\n        },\n        error: err => {\n          console.error('Erro ao realizar depósito:', err);\n          alert('Erro ao realizar depósito. Tente novamente.');\n        }\n      });\n    }\n    realizarSaque() {\n      if (!this.contaSelecionada || this.valor <= 0) {\n        alert('Informe um valor válido para saque.');\n        return;\n      }\n      this.contaService.realizarSaque(this.contaSelecionada.idConta, this.valor).subscribe({\n        next: contaAtualizada => {\n          alert('Saque realizado com sucesso!');\n          this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\n          this.valor = 0; // Limpa o campo de valor\n        },\n        error: err => {\n          console.error('Erro ao realizar saque:', err);\n          alert('Erro ao realizar saque. Tente novamente.');\n        }\n      });\n    }\n    alternarExtrato() {\n      this.mostrarExtrato = !this.mostrarExtrato;\n      if (this.mostrarExtrato) {\n        this.carregarExtrato();\n      }\n    }\n    carregarExtrato() {\n      if (!this.contaSelecionada) {\n        alert('Selecione uma conta para visualizar o extrato.');\n        return;\n      }\n      this.contaService.getExtrato(this.contaSelecionada.idConta).subscribe({\n        next: extrato => {\n          this.extrato = extrato;\n        },\n        error: err => {\n          console.error('Erro ao carregar extrato:', err);\n          alert('Erro ao carregar o extrato.');\n        }\n      });\n    }\n    carregarDetalhesConta() {\n      if (!this.contaSelecionada) {\n        return;\n      }\n      this.contaService.obterDetalhesConta(this.contaSelecionada.idConta).subscribe({\n        next: contaAtualizada => {\n          this.contaSelecionada = contaAtualizada;\n        },\n        error: err => {\n          console.error('Erro ao carregar detalhes da conta:', err);\n          alert('Erro ao carregar detalhes da conta.');\n        }\n      });\n    }\n    static ɵfac = function ContaComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ContaComponent)(i0.ɵɵdirectiveInject(i1.ContaService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ContaComponent,\n      selectors: [[\"app-conta\"]],\n      decls: 13,\n      vars: 5,\n      consts: [[1, \"container\"], [4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"Nome do Titular\", 3, \"ngModelChange\", \"ngModel\"], [3, \"click\"], [\"class\", \"erro\", 4, \"ngIf\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"valor\"], [\"id\", \"valor\", \"type\", \"number\", \"placeholder\", \"Valor\", 3, \"ngModelChange\", \"ngModel\"], [4, \"ngFor\", \"ngForOf\"], [1, \"erro\"]],\n      template: function ContaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Gerenciar Conta\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, ContaComponent_div_3_Template, 5, 1, \"div\", 1)(4, ContaComponent_div_4_Template, 3, 0, \"div\", 1);\n          i0.ɵɵelementStart(5, \"div\")(6, \"h3\");\n          i0.ɵɵtext(7, \"Criar Nova Conta\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_Template_input_ngModelChange_8_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.nomeTitular, $event) || (ctx.nomeTitular = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function ContaComponent_Template_button_click_9_listener() {\n            return ctx.criarConta();\n          });\n          i0.ɵɵtext(10, \"Criar Conta\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(11, ContaComponent_div_11_Template, 26, 8, \"div\", 1)(12, ContaComponent_div_12_Template, 3, 0, \"div\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.contas.length > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.contas.length === 0);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.nomeTitular);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.contaSelecionada);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.erro);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, i2.CurrencyPipe, FormsModule, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"\\n\\n.container[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  max-width: 600px;\\n  margin: 0 auto;\\n  border: 1px solid #ccc;\\n  border-radius: 8px;\\n  background-color: #f9f9f9;\\n}\\n\\nh2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  padding: 8px;\\n  width: 100%;\\n  margin-bottom: 10px;\\n  border-radius: 4px;\\n  border: 1px solid #ccc;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  padding: 10px 15px;\\n  margin: 5px;\\n  background-color: #007bff;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n\\nul[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding-left: 0;\\n}\\n\\nli[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n  cursor: pointer;\\n}\\n\\n.erro[_ngcontent-%COMP%] {\\n  color: red;\\n  text-align: center;\\n  font-weight: bold;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29udGEtY29tcG9uZW50L2NvbnRhLWNvbXBvbmVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtDQUFrQztBQUNsQztFQUNFLGFBQWE7RUFDYixnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLFdBQVc7RUFDWCxtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixpQkFBaUI7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBjb250YS1jb21wb25lbnQuY29tcG9uZW50LmNzcyAqL1xuLmNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1heC13aWR0aDogNjAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XG59XG5cbmgyLCBoMyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuaW5wdXQge1xuICBwYWRkaW5nOiA4cHg7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG59XG5cbmJ1dHRvbiB7XG4gIHBhZGRpbmc6IDEwcHggMTVweDtcbiAgbWFyZ2luOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcbn1cblxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nLWxlZnQ6IDA7XG59XG5cbmxpIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uZXJybyB7XG4gIGNvbG9yOiByZWQ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n  return ContaComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵlistener","ContaComponent_div_3_li_4_Template_li_click_0_listener","conta_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","selecionarConta","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","nomeTitular","ɵɵpipeBind1","saldo","ɵɵtemplate","ContaComponent_div_3_li_4_Template","ɵɵproperty","contas","ɵɵtextInterpolate3","item_r5","data","descricao","valor","ContaComponent_div_11_div_22_li_4_Template","extrato","ContaComponent_div_11_div_23_Template_button_click_1_listener","_r6","realizarDeposito","ContaComponent_div_11_div_23_Template_button_click_3_listener","realizarSaque","ContaComponent_div_11_div_23_Template_button_click_5_listener","alternarExtrato","ɵɵtwoWayListener","ContaComponent_div_11_Template_input_ngModelChange_15_listener","$event","_r4","ɵɵtwoWayBindingSet","ContaComponent_div_11_Template_button_click_16_listener","ContaComponent_div_11_Template_button_click_18_listener","ContaComponent_div_11_Template_button_click_20_listener","ContaComponent_div_11_div_22_Template","ContaComponent_div_11_div_23_Template","ContaComponent_div_11_Template_button_click_24_listener","carregarDetalhesConta","ɵɵtextInterpolate1","contaSelecionada","ɵɵtwoWayProperty","mostrarExtrato","ContaComponent","contaService","erro","constructor","ngOnInit","listarContas","idUsuario","localStorage","getItem","alert","listarContasPorUsuario","subscribe","next","dados","console","log","error","err","conta","criarConta","trim","novaConta","push","idConta","contaAtualizada","carregarExtrato","getExtrato","obterDetalhesConta","ɵɵdirectiveInject","i1","ContaService","selectors","decls","vars","consts","template","ContaComponent_Template","rf","ctx","ContaComponent_div_3_Template","ContaComponent_div_4_Template","ContaComponent_Template_input_ngModelChange_8_listener","ContaComponent_Template_button_click_9_listener","ContaComponent_div_11_Template","ContaComponent_div_12_Template","length","i2","NgForOf","NgIf","CurrencyPipe","i3","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgModel","styles"],"sources":["C:\\Users\\Mallmann\\Desktop\\Teste\\frontend\\src\\app\\conta-component\\conta-component.component.ts","C:\\Users\\Mallmann\\Desktop\\Teste\\frontend\\src\\app\\conta-component\\conta-component.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ContaService } from '../services/conta.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ContaDTO } from '../conta.model';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-conta',\r\n  templateUrl: './conta-component.component.html',\r\n  styleUrls: ['./conta-component.component.css'],\r\n  imports: [CommonModule, FormsModule],\r\n})\r\nexport class ContaComponent implements OnInit {\r\n  contas: ContaDTO[] = [];\r\n  contaSelecionada: ContaDTO | null = null;\r\n  nomeTitular: string = '';\r\n  valor: number = 0;\r\n  mostrarExtrato: boolean = false;\r\n  extrato: any[] = [];\r\n  erro: boolean = false;\r\n\r\n  constructor(private contaService: ContaService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.listarContas();\r\n  }\r\n\r\n  listarContas(): void {\r\n    const idUsuario = localStorage.getItem('idUsuario');\r\n    if (!idUsuario) {\r\n      alert('Usuário não autenticado! Faça login para listar as contas.');\r\n      return;\r\n    }\r\n  \r\n    this.contaService.listarContasPorUsuario().subscribe({\r\n      next: (dados: ContaDTO[]) => {\r\n        console.log('Contas retornadas pelo backend:', dados);\r\n        this.contas = dados;\r\n        this.erro = false;\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao listar contas:', err);\r\n        this.erro = true;\r\n        alert('Não foi possível listar as contas.');\r\n      },\r\n    });\r\n  }\r\n  \r\n  \r\n\r\n  selecionarConta(conta: ContaDTO): void {\r\n    this.contaSelecionada = conta;\r\n    this.mostrarExtrato = false; // Ocultar extrato ao selecionar outra conta\r\n  }\r\n\r\n  criarConta(): void {\r\n    const idUsuario = localStorage.getItem('idUsuario');\r\n    if (!idUsuario) {\r\n      alert('Usuário não autenticado!');\r\n      return;\r\n    }\r\n  \r\n    if (!this.nomeTitular.trim()) {\r\n      alert('Informe o nome do titular para criar a conta.');\r\n      return;\r\n    }\r\n  \r\n    this.contaService.criarConta({ nomeTitular: this.nomeTitular }, +idUsuario).subscribe({\r\n      next: (novaConta: ContaDTO) => {\r\n        console.log('Resposta da API (novaConta):', novaConta); // Verifique o que está sendo retornado\r\n        alert('Conta criada com sucesso!');\r\n        if (novaConta) {\r\n          this.contas.push(novaConta);  // Adiciona a nova conta à lista\r\n          this.selecionarConta(novaConta);  // Seleciona a conta automaticamente\r\n        } else {\r\n          console.error('Erro: A resposta da API não contém uma conta válida.');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao criar conta:', err);\r\n        alert('Erro ao criar a conta.');\r\n      }\r\n    });\r\n  }\r\n  \r\n  \r\n  \r\n\r\n  realizarDeposito(): void {\r\n    if (!this.contaSelecionada || this.valor <= 0) {\r\n      alert('Informe um valor válido para depósito.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.realizarDeposito(this.contaSelecionada.idConta, this.valor).subscribe({\r\n      next: (contaAtualizada) => {\r\n        alert('Depósito realizado com sucesso!');\r\n        this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\r\n        this.valor = 0; // Limpa o campo de valor\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao realizar depósito:', err);\r\n        alert('Erro ao realizar depósito. Tente novamente.');\r\n      },\r\n    });\r\n  }\r\n\r\n  realizarSaque(): void {\r\n    if (!this.contaSelecionada || this.valor <= 0) {\r\n      alert('Informe um valor válido para saque.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.realizarSaque(this.contaSelecionada.idConta, this.valor).subscribe({\r\n      next: (contaAtualizada) => {\r\n        alert('Saque realizado com sucesso!');\r\n        this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\r\n        this.valor = 0; // Limpa o campo de valor\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao realizar saque:', err);\r\n        alert('Erro ao realizar saque. Tente novamente.');\r\n      },\r\n    });\r\n  }\r\n\r\n  alternarExtrato(): void {\r\n    this.mostrarExtrato = !this.mostrarExtrato;\r\n    if (this.mostrarExtrato) {\r\n      this.carregarExtrato();\r\n    }\r\n  }\r\n\r\n  carregarExtrato(): void {\r\n    if (!this.contaSelecionada) {\r\n      alert('Selecione uma conta para visualizar o extrato.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.getExtrato(this.contaSelecionada.idConta).subscribe({\r\n      next: (extrato) => {\r\n        this.extrato = extrato;\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao carregar extrato:', err);\r\n        alert('Erro ao carregar o extrato.');\r\n      },\r\n    });\r\n  }\r\n\r\n  carregarDetalhesConta(): void {\r\n    if (!this.contaSelecionada) {\r\n      return;\r\n    }\r\n\r\n    this.contaService.obterDetalhesConta(this.contaSelecionada.idConta).subscribe({\r\n      next: (contaAtualizada) => {\r\n        this.contaSelecionada = contaAtualizada;\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao carregar detalhes da conta:', err);\r\n        alert('Erro ao carregar detalhes da conta.');\r\n      },\r\n    });\r\n  }\r\n}\r\n","<!-- conta-component.component.html -->\r\n<div class=\"container\">\r\n  <h2>Gerenciar Conta</h2>\r\n\r\n  <!-- Exibir lista de contas -->\r\n  <div *ngIf=\"contas.length > 0\">\r\n    <h3>Contas Disponíveis</h3>\r\n    <ul>\r\n      <li *ngFor=\"let conta of contas\" (click)=\"selecionarConta(conta)\">\r\n        {{ conta.nomeTitular }} - Saldo: {{ conta.saldo | currency }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div *ngIf=\"contas.length === 0\">\r\n    <p>Você não possui contas. Crie uma nova conta.</p>\r\n  </div>\r\n\r\n  <!-- Formulário para criação de conta -->\r\n  <div>\r\n    <h3>Criar Nova Conta</h3>\r\n    <input type=\"text\" [(ngModel)]=\"nomeTitular\" placeholder=\"Nome do Titular\" />\r\n    <button (click)=\"criarConta()\">Criar Conta</button>\r\n  </div>\r\n\r\n  <!-- Exibir detalhes da conta selecionada -->\r\n  <div *ngIf=\"contaSelecionada\">\r\n    <h3>Detalhes da Conta</h3>\r\n    <p><strong>Nome do Titular:</strong> {{ contaSelecionada.nomeTitular }}</p>\r\n    <p><strong>Saldo:</strong> {{ contaSelecionada.saldo | currency }}</p>\r\n\r\n    <div>\r\n      <label for=\"valor\">Valor:</label>\r\n      <input id=\"valor\" type=\"number\" [(ngModel)]=\"valor\" placeholder=\"Valor\" />\r\n    </div>\r\n\r\n    <!-- Depósito e Saque -->\r\n    <button (click)=\"realizarDeposito()\">Realizar Depósito</button>\r\n    <button (click)=\"realizarSaque()\">Realizar Saque</button>\r\n\r\n    <!-- Exibir Extrato -->\r\n    <button (click)=\"alternarExtrato()\">\r\n      {{ mostrarExtrato ? 'Ocultar' : 'Exibir' }} Extrato\r\n    </button>\r\n\r\n    <div *ngIf=\"mostrarExtrato\">\r\n      <h4>Extrato da Conta</h4>\r\n      <ul>\r\n        <li *ngFor=\"let item of extrato\">\r\n          {{ item.data }} - {{ item.descricao }} - {{ item.valor | currency }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div *ngIf=\"contaSelecionada\">\r\n      <button (click)=\"realizarDeposito()\">Depositar</button>\r\n      <button (click)=\"realizarSaque()\">Sacar</button>\r\n      <button (click)=\"alternarExtrato()\">Extrato</button>\r\n    </div>\r\n    \r\n    <!-- Detalhes da conta -->\r\n    <button (click)=\"carregarDetalhesConta()\">Carregar Detalhes</button>\r\n  </div>\r\n\r\n  <!-- Mensagem de erro -->\r\n  <div *ngIf=\"erro\" class=\"erro\">\r\n    <p>Ocorreu um erro. Tente novamente mais tarde.</p>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}