{"ast":null,"code":"import { ContaService } from '../services/conta.service';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { AuthInterceptor } from '../auth.interceptor';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/conta.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ContaComponent_section_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 10)(1, \"h3\");\n    i0.ɵɵtext(2, \"Criar Conta\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 11);\n    i0.ɵɵtext(4, \"Nome do Titular\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 12);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_section_5_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.nomeTitular, $event) || (ctx_r1.nomeTitular = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ContaComponent_section_5_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.criarConta());\n    });\n    i0.ɵɵtext(7, \"Criar Conta\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.nomeTitular);\n  }\n}\nfunction ContaComponent_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 14)(1, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function ContaComponent_li_10_Template_button_click_1_listener() {\n      const conta_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.selecionarConta(conta_r4));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const conta_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"selected\", conta_r4 === ctx_r1.contaSelecionada);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", conta_r4.nomeTitular, \" \");\n  }\n}\nfunction ContaComponent_section_11_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function ContaComponent_section_11_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.realizarDeposito());\n    });\n    i0.ɵɵtext(1, \" Depositar \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContaComponent_section_11_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function ContaComponent_section_11_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.realizarSaque());\n    });\n    i0.ɵɵtext(1, \" Sacar \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContaComponent_section_11_div_14_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 33)(1, \"span\", 34);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 35);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 36);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transacao_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 3, transacao_r8.dataTransacao, \"dd/MM/yyyy HH:mm\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(transacao_r8.tipo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 6, transacao_r8.valor));\n  }\n}\nfunction ContaComponent_section_11_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31)(1, \"ul\");\n    i0.ɵɵtemplate(2, ContaComponent_section_11_div_14_li_2_Template, 9, 8, \"li\", 32);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.extrato);\n  }\n}\nfunction ContaComponent_section_11_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"p\");\n    i0.ɵɵtext(2, \"Nenhuma transa\\u00E7\\u00E3o registrada.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ContaComponent_section_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 16)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 17)(4, \"h4\");\n    i0.ɵɵtext(5, \"Realizar Transa\\u00E7\\u00E3o\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 18);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_section_11_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.valor, $event) || (ctx_r1.valor = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, ContaComponent_section_11_button_7_Template, 2, 0, \"button\", 19)(8, ContaComponent_section_11_button_8_Template, 2, 0, \"button\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"section\", 21)(10, \"h4\", 22);\n    i0.ɵɵtext(11, \"Extrato da Conta\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ContaComponent_section_11_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.carregarExtrato());\n    });\n    i0.ɵɵtext(13, \"Carregar Extrato\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, ContaComponent_section_11_div_14_Template, 3, 1, \"div\", 24)(15, ContaComponent_section_11_div_15_Template, 3, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"section\", 26)(17, \"div\", 27)(18, \"p\")(19, \"strong\");\n    i0.ɵɵtext(20, \"Saldo Atual: R\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"span\", 28);\n    i0.ɵɵtext(22);\n    i0.ɵɵpipe(23, \"currency\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Detalhes da Conta: \", ctx_r1.contaSelecionada.nomeTitular, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.valor);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.valor > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.valor > 0);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.extrato.length > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.extrato.length === 0);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(23, 7, ctx_r1.contaSelecionada.saldo));\n  }\n}\nfunction ContaComponent_section_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 38)(1, \"p\", 39);\n    i0.ɵɵtext(2, \"Voc\\u00EA ainda n\\u00E3o tem nenhuma conta cadastrada!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let ContaComponent = /*#__PURE__*/(() => {\n  class ContaComponent {\n    contaService;\n    router;\n    contas = [];\n    contaSelecionada = null;\n    nomeTitular = '';\n    valor = 0;\n    mostrarExtrato = false;\n    extrato = []; // Tipagem correta para o extrato\n    erro = false;\n    constructor(contaService, router) {\n      this.contaService = contaService;\n      this.router = router;\n    }\n    ngOnInit() {\n      // Verifica se o token de autenticação está presente\n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.router.navigate(['/login']);\n        return;\n      }\n      this.listarContas(); // Chama a função para listar as contas do usuário\n    }\n    listarContas() {\n      const idUsuario = localStorage.getItem('idUsuario');\n      if (!idUsuario) {\n        alert('Usuário não autenticado! Faça login para listar as contas.');\n        this.router.navigate(['']); // Isso redireciona para a página de login caso o idUsuario não esteja presente\n        return;\n      }\n      this.contaService.listarContasPorUsuario().subscribe({\n        next: dados => {\n          console.log('Contas retornadas pelo backend:', dados);\n          // Verifica se o retorno é um objeto único ou um array\n          if (Array.isArray(dados)) {\n            this.contas = dados;\n          } else {\n            this.contas = [dados]; // Converte o objeto único em um array\n          }\n          this.erro = false;\n        },\n        error: err => {\n          console.error('Erro ao listar contas:', err);\n          this.erro = true;\n          alert('Crie uma conta!');\n        }\n      });\n    }\n    selecionarConta(conta) {\n      this.contaSelecionada = conta;\n      this.mostrarExtrato = false; // Ocultar extrato ao selecionar outra conta\n    }\n    criarConta() {\n      const idUsuario = localStorage.getItem('idUsuario');\n      if (!idUsuario) {\n        alert('Usuário não autenticado!');\n        return;\n      }\n      if (!this.nomeTitular.trim()) {\n        alert('Informe o nome do titular para criar a conta.');\n        return;\n      }\n      this.contaService.criarConta({\n        nomeTitular: this.nomeTitular\n      }, +idUsuario).subscribe({\n        next: novaConta => {\n          console.log('Resposta da API (novaConta):', novaConta); // Verifique o que está sendo retornado\n          alert('Conta criada com sucesso!');\n          if (novaConta) {\n            this.contas.push(novaConta); // Adiciona a nova conta à lista\n            this.selecionarConta(novaConta); // Seleciona a conta automaticamente\n          } else {\n            console.error('Erro: A resposta da API não contém uma conta válida.');\n          }\n        },\n        error: err => {\n          console.error('Erro ao criar conta:', err);\n          alert('Erro ao criar a conta.');\n        }\n      });\n    }\n    realizarDeposito() {\n      if (!this.contaSelecionada || this.valor <= 0) {\n        alert('Informe um valor válido para depósito.');\n        return;\n      }\n      this.contaService.realizarDeposito(this.contaSelecionada.idConta, this.valor).subscribe({\n        next: contaAtualizada => {\n          alert('Depósito realizado com sucesso!');\n          this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\n          this.valor = 0; // Limpa o campo de valor\n        },\n        error: err => {\n          console.error('Erro ao realizar depósito:', err);\n          alert('Erro ao realizar depósito. Tente novamente.');\n        }\n      });\n    }\n    realizarSaque() {\n      if (!this.contaSelecionada || this.valor <= 0) {\n        alert('Informe um valor válido para saque.');\n        return;\n      }\n      this.contaService.realizarSaque(this.contaSelecionada.idConta, this.valor).subscribe({\n        next: contaAtualizada => {\n          alert('Saque realizado com sucesso!');\n          this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\n          this.valor = 0; // Limpa o campo de valor\n        },\n        error: err => {\n          console.error('Erro ao realizar saque:', err);\n          alert('Erro ao realizar saque, saldo insuficiente. Tente novamente.');\n        }\n      });\n    }\n    carregarExtrato() {\n      if (!this.contaSelecionada) {\n        alert('Selecione uma conta para visualizar o extrato.');\n        return;\n      }\n      this.contaService.getExtrato(this.contaSelecionada.idConta).subscribe({\n        next: extrato => {\n          this.extrato = extrato;\n        },\n        error: err => {\n          console.error('Erro ao carregar extrato:', err);\n          alert('Erro ao carregar o extrato.');\n        }\n      });\n    }\n    carregarDetalhesConta() {\n      if (!this.contaSelecionada) {\n        return;\n      }\n      this.contaService.obterDetalhesConta(this.contaSelecionada.idConta).subscribe({\n        next: contaAtualizada => {\n          this.contaSelecionada = contaAtualizada;\n        },\n        error: err => {\n          console.error('Erro ao carregar detalhes da conta:', err);\n          alert('Erro ao carregar detalhes da conta.');\n        }\n      });\n    }\n    sair() {\n      // Limpar as informações do usuário do localStorage\n      localStorage.removeItem('idUsuario');\n      // Redirecionar para a página de login\n      this.router.navigate(['']); // A rota de login pode variar dependendo de como está configurado no seu Angular\n    }\n    static ɵfac = function ContaComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ContaComponent)(i0.ɵɵdirectiveInject(i1.ContaService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ContaComponent,\n      selectors: [[\"app-conta\"]],\n      features: [i0.ɵɵProvidersFeature([ContaService, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: AuthInterceptor,\n        multi: true\n      }])],\n      decls: 15,\n      vars: 4,\n      consts: [[1, \"content-wrapper\"], [1, \"container\"], [1, \"header\"], [\"class\", \"create-account-section\", 4, \"ngIf\"], [1, \"accounts-section\"], [1, \"accounts-list\"], [\"class\", \"account-item\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"account-details-section\", 4, \"ngIf\"], [\"class\", \"error-section\", 4, \"ngIf\"], [1, \"btn-sair\", 3, \"click\"], [1, \"create-account-section\"], [\"for\", \"nomeTitular\", 1, \"label\"], [\"type\", \"text\", \"id\", \"nomeTitular\", \"placeholder\", \"Digite o nome do titular\", 1, \"input-text\", 3, \"ngModelChange\", \"ngModel\"], [1, \"btn-criar-conta\", 3, \"click\"], [1, \"account-item\"], [1, \"account-button\", 3, \"click\"], [1, \"account-details-section\"], [1, \"transaction-section\"], [\"type\", \"number\", \"placeholder\", \"Digite o valor\", 1, \"input-number\", 3, \"ngModelChange\", \"ngModel\"], [\"class\", \"btn-deposito\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn-saque\", 3, \"click\", 4, \"ngIf\"], [1, \"extrato-container\"], [1, \"extrato-title\"], [1, \"btn-extrato\", 3, \"click\"], [\"class\", \"extrato-list\", 4, \"ngIf\"], [\"class\", \"no-transacoes\", 4, \"ngIf\"], [1, \"conta-container\"], [1, \"conta-detalhes\"], [1, \"conta-saldo\"], [1, \"btn-deposito\", 3, \"click\"], [1, \"btn-saque\", 3, \"click\"], [1, \"extrato-list\"], [\"class\", \"extrato-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"extrato-item\"], [1, \"transacao-data\"], [1, \"transacao-tipo\"], [1, \"transacao-valor\", \"esquerda\"], [1, \"no-transacoes\"], [1, \"error-section\"], [1, \"error-message\"]],\n      template: function ContaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"header\", 2)(3, \"h1\");\n          i0.ɵɵtext(4, \"Gerenciador da Conta\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(5, ContaComponent_section_5_Template, 8, 1, \"section\", 3);\n          i0.ɵɵelementStart(6, \"section\", 4)(7, \"h3\");\n          i0.ɵɵtext(8, \"Bem vindo!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"ul\", 5);\n          i0.ɵɵtemplate(10, ContaComponent_li_10_Template, 3, 3, \"li\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(11, ContaComponent_section_11_Template, 24, 9, \"section\", 7)(12, ContaComponent_section_12_Template, 3, 0, \"section\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function ContaComponent_Template_button_click_13_listener() {\n            return ctx.sair();\n          });\n          i0.ɵɵtext(14, \" Sair\\n\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.contas.length === 0);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.contas);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.contaSelecionada);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.erro);\n        }\n      },\n      dependencies: [CommonModule, i3.NgForOf, i3.NgIf, i3.CurrencyPipe, i3.DatePipe, FormsModule, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgModel, HttpClientModule],\n      styles: [\"\\n\\n.content-wrapper[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 480px;\\n  min-height: 800px;\\n  margin: 0 auto;\\n  background-color: #2c2f36;\\n  color: #f1f1f1;\\n  padding: 20px;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\\n  border-radius: 8px;\\n}\\n\\n\\n\\nh1[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%] {\\n  color: #f1f1f1;\\n  font-weight: bold;\\n  text-align: center;\\n  margin-bottom: 10px;\\n}\\nh1[_ngcontent-%COMP%] {\\n  font-size: 28px;\\n  margin-bottom: 20px;\\n}\\n\\n.transaction-section[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column; \\n\\n  align-items: center; \\n\\n  justify-content: center; \\n\\n  \\n  text-align: center; \\n\\n}\\n\\n\\n\\n.input-number[_ngcontent-%COMP%] {\\n  width: 40%; \\n\\n  padding: 10px;\\n  font-size: 16px;\\n  box-sizing: border-box; \\n\\n  margin-bottom: 20px; \\n\\n}\\n\\ninput[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"number\\\"][_ngcontent-%COMP%] {\\n \\n  text-align: center;\\n  padding: 13px;\\n  margin: 10px 0;\\n  border: 1px solid #444;\\n  background-color: #333;\\n  color: #f1f1f1;\\n  font-size: 16px;\\n  box-sizing: border-box;\\n  border-radius: 4px;\\n}\\n\\n\\n\\nbutton[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 14px;\\n  border: none;\\n  background-color: #4CAF50;\\n  color: white;\\n  font-size: 16px;\\n  margin: 10px 0;\\n  cursor: pointer;\\n  transition: background-color 0.3s ease, transform 0.2s ease;\\n  border-radius: 4px;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #45a049;\\n  transform: translateY(-2px);\\n}\\n\\nbutton[_ngcontent-%COMP%]:disabled {\\n  background-color: #555;\\n  cursor: not-allowed;\\n}\\n\\n\\n\\nul[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding: 0;\\n}\\n\\nli[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\n.account-button[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 14px;\\n  border: 1px solid #444;\\n  background-color: #333;\\n  text-align: center;\\n  font-size: 18px;\\n  color: #f1f1f1;\\n  cursor: pointer;\\n  transition: background-color 0.3s ease, transform 0.2s ease;\\n  border-radius: 4px;\\n}\\n\\n.account-button[_ngcontent-%COMP%]:hover {\\n  background-color: #444;\\n  transform: translateY(-2px);\\n}\\n\\n.selected[_ngcontent-%COMP%] {\\n  background-color: #4CAF50;\\n  color: white;\\n}\\n\\n\\n\\n.error[_ngcontent-%COMP%] {\\n  background-color: #f8d7da;\\n  color: #721c24;\\n  padding: 12px;\\n  margin-top: 20px;\\n  text-align: center;\\n  border-radius: 4px;\\n}\\n\\n\\n\\n.extrato-container[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  background-color: #44474d;\\n  border-radius: 8px;\\n  margin-top: 20px;\\n}\\n\\n.extrato-title[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  font-weight: bold;\\n  text-align: center;\\n  margin-bottom: 15px;\\n  color: #f1f1f1;\\n}\\n\\n.btn-extrato[_ngcontent-%COMP%] {\\n  background-color: #4CAF50;\\n  color: white;\\n  font-size: 16px;\\n  border: none;\\n  padding: 10px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  width: 100%;\\n  transition: background-color 0.3s ease, transform 0.2s ease;\\n  margin-bottom: 20px;\\n}\\n\\n.btn-extrato[_ngcontent-%COMP%]:hover {\\n  background-color: #45a049;\\n  transform: translateY(-2px);\\n}\\n\\n.extrato-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: end;\\n  padding: 4px 0;\\n  border-bottom: 1px solid #555;\\n  font-size: 15px;\\n  color: #f1f1f1;\\n}\\n\\n.transacao-data[_ngcontent-%COMP%], .transacao-tipo[_ngcontent-%COMP%], .transacao-valor[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  text-align: left;\\n  flex: 1;\\n}\\n\\n.transacao-valor.esquerda[_ngcontent-%COMP%] {\\n  text-align: right;\\n}\\n\\n.no-transacoes[_ngcontent-%COMP%] {\\n  text-align: center;\\n  color: #999;\\n}\\n\\n.conta-detalhes[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  font-weight: bold;\\n  text-align: center;\\n  margin-top: 50px;\\n  color: #f1f1f1;\\n}\\n\\n\\n\\n@media (max-width: 480px) {\\n  .content-wrapper[_ngcontent-%COMP%] {\\n    width: 90%;\\n    padding: 15px;\\n  }\\n\\n  h1[_ngcontent-%COMP%] {\\n    font-size: 24px;\\n  }\\n\\n  input[_ngcontent-%COMP%], button[_ngcontent-%COMP%] {\\n    font-size: 14px;\\n  }\\n\\n  .account-button[_ngcontent-%COMP%] {\\n    font-size: 16px;\\n  }\\n}\\n\\n@media (max-width: 768px) {\\n  .content-wrapper[_ngcontent-%COMP%] {\\n    width: 80%;\\n  }\\n\\n  h1[_ngcontent-%COMP%] {\\n    font-size: 26px;\\n  }\\n\\n  .saldo[_ngcontent-%COMP%] {\\n    font-size: 28px;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n  return ContaComponent;\n})();","map":{"version":3,"names":["ContaService","CommonModule","FormsModule","HTTP_INTERCEPTORS","HttpClientModule","AuthInterceptor","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtwoWayListener","ContaComponent_section_5_Template_input_ngModelChange_5_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","nomeTitular","ɵɵresetView","ɵɵlistener","ContaComponent_section_5_Template_button_click_6_listener","criarConta","ɵɵadvance","ɵɵtwoWayProperty","ContaComponent_li_10_Template_button_click_1_listener","conta_r4","_r3","$implicit","selecionarConta","ɵɵclassProp","contaSelecionada","ɵɵtextInterpolate1","ContaComponent_section_11_button_7_Template_button_click_0_listener","_r6","realizarDeposito","ContaComponent_section_11_button_8_Template_button_click_0_listener","_r7","realizarSaque","ɵɵtextInterpolate","ɵɵpipeBind2","transacao_r8","dataTransacao","tipo","ɵɵpipeBind1","valor","ɵɵtemplate","ContaComponent_section_11_div_14_li_2_Template","ɵɵproperty","extrato","ContaComponent_section_11_Template_input_ngModelChange_6_listener","_r5","ContaComponent_section_11_button_7_Template","ContaComponent_section_11_button_8_Template","ContaComponent_section_11_Template_button_click_12_listener","carregarExtrato","ContaComponent_section_11_div_14_Template","ContaComponent_section_11_div_15_Template","length","saldo","ContaComponent","contaService","router","contas","mostrarExtrato","erro","constructor","ngOnInit","token","localStorage","getItem","navigate","listarContas","idUsuario","alert","listarContasPorUsuario","subscribe","next","dados","console","log","Array","isArray","error","err","conta","trim","novaConta","push","idConta","contaAtualizada","getExtrato","carregarDetalhesConta","obterDetalhesConta","sair","removeItem","ɵɵdirectiveInject","i1","i2","Router","selectors","features","ɵɵProvidersFeature","provide","useClass","multi","decls","vars","consts","template","ContaComponent_Template","rf","ctx","ContaComponent_section_5_Template","ContaComponent_li_10_Template","ContaComponent_section_11_Template","ContaComponent_section_12_Template","ContaComponent_Template_button_click_13_listener","i3","NgForOf","NgIf","CurrencyPipe","DatePipe","i4","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgModel","styles"],"sources":["C:\\Users\\Mallmann\\Desktop\\TesteFull\\frontend\\src\\app\\conta-component\\conta-component.component.ts","C:\\Users\\Mallmann\\Desktop\\TesteFull\\frontend\\src\\app\\conta-component\\conta-component.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ContaService } from '../services/conta.service';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ContaDTO } from '../conta.model';\nimport { TransacaoDTO } from '../transacao.model';\nimport { Router } from '@angular/router';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { AuthInterceptor } from '../auth.interceptor';\n\n@Component({\n  standalone: true,\n  selector: 'app-conta',\n  templateUrl: './conta-component.component.html',\n  styleUrls: ['./conta-component.component.css'],\n  imports: [CommonModule, FormsModule, HttpClientModule, \n  ], \n  providers: [ \n    ContaService,\n     { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n     ]\n     })\nexport class ContaComponent implements OnInit {\n  contas: ContaDTO[] = [];\n  contaSelecionada: ContaDTO | null = null;\n  nomeTitular: string = '';\n  valor: number = 0;\n  mostrarExtrato: boolean = false;\n  extrato: TransacaoDTO[] = []; // Tipagem correta para o extrato\n  erro: boolean = false;\n  \n\n  constructor(private contaService: ContaService, private router: Router) {}\n\n  ngOnInit(): void {\n    // Verifica se o token de autenticação está presente\n    const token = localStorage.getItem('token');\n    if (!token) {\n      this.router.navigate(['/login']);\n      return;\n    }\n\n    this.listarContas(); // Chama a função para listar as contas do usuário\n  }\n\n  listarContas(): void {\n    const idUsuario = localStorage.getItem('idUsuario');\n    if (!idUsuario) {\n      alert('Usuário não autenticado! Faça login para listar as contas.');\n      this.router.navigate(['']);  // Isso redireciona para a página de login caso o idUsuario não esteja presente\n    return;\n    }\n  \n    this.contaService.listarContasPorUsuario().subscribe({\n      next: (dados: ContaDTO | ContaDTO[]) => {\n        console.log('Contas retornadas pelo backend:', dados);\n  \n        // Verifica se o retorno é um objeto único ou um array\n        if (Array.isArray(dados)) {\n          this.contas = dados;\n        } else {\n          this.contas = [dados]; // Converte o objeto único em um array\n        }\n  \n        this.erro = false;\n      },\n      error: (err) => {\n        console.error('Erro ao listar contas:', err);\n        this.erro = true;\n        alert('Crie uma conta!');\n      },\n    });\n  }\n  \n  \n  \n\n  selecionarConta(conta: ContaDTO): void {\n    this.contaSelecionada = conta;\n    this.mostrarExtrato = false; // Ocultar extrato ao selecionar outra conta\n  }\n\n  criarConta(): void {\n    const idUsuario = localStorage.getItem('idUsuario');\n    if (!idUsuario) {\n      alert('Usuário não autenticado!');\n      return;\n    }\n  \n    if (!this.nomeTitular.trim()) {\n      alert('Informe o nome do titular para criar a conta.');\n      return;\n    }\n  \n    this.contaService.criarConta({ nomeTitular: this.nomeTitular }, +idUsuario).subscribe({\n      next: (novaConta: ContaDTO) => {\n        console.log('Resposta da API (novaConta):', novaConta); // Verifique o que está sendo retornado\n        alert('Conta criada com sucesso!');\n        if (novaConta) {\n          this.contas.push(novaConta);  // Adiciona a nova conta à lista\n          this.selecionarConta(novaConta);  // Seleciona a conta automaticamente\n        } else {\n          console.error('Erro: A resposta da API não contém uma conta válida.');\n        }\n      },\n      error: (err) => {\n        console.error('Erro ao criar conta:', err);\n        alert('Erro ao criar a conta.');\n      }\n    });\n  }\n  \n  \n  \n\n  realizarDeposito(): void {\n    if (!this.contaSelecionada || this.valor <= 0) {\n      alert('Informe um valor válido para depósito.');\n      return;\n    }\n  \n    this.contaService.realizarDeposito(this.contaSelecionada.idConta, this.valor).subscribe({\n      next: (contaAtualizada) => {\n        alert('Depósito realizado com sucesso!');\n        this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\n        this.valor = 0; // Limpa o campo de valor\n      },\n      error: (err) => {\n        console.error('Erro ao realizar depósito:', err);\n        alert('Erro ao realizar depósito. Tente novamente.');\n      },\n    });\n  }\n  \n  realizarSaque(): void {\n    if (!this.contaSelecionada || this.valor <= 0) {\n      alert('Informe um valor válido para saque.');\n      return;\n    }\n  \n    this.contaService.realizarSaque(this.contaSelecionada.idConta, this.valor).subscribe({\n      next: (contaAtualizada) => {\n        alert('Saque realizado com sucesso!');\n        this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\n        this.valor = 0; // Limpa o campo de valor\n      },\n      error: (err) => {\n        console.error('Erro ao realizar saque:', err);\n        alert('Erro ao realizar saque, saldo insuficiente. Tente novamente.');\n      },\n    });\n  }\n  \n\n  carregarExtrato(): void {\n    if (!this.contaSelecionada) {\n      alert('Selecione uma conta para visualizar o extrato.');\n      return;\n    }\n\n    this.contaService.getExtrato(this.contaSelecionada.idConta).subscribe({\n      next: (extrato) => {\n        this.extrato = extrato;\n      },\n      error: (err) => {\n        console.error('Erro ao carregar extrato:', err);\n        alert('Erro ao carregar o extrato.');\n      },\n    });\n  }\n\n  carregarDetalhesConta(): void {\n    if (!this.contaSelecionada) {\n      return;\n    }\n\n    this.contaService.obterDetalhesConta(this.contaSelecionada.idConta).subscribe({\n      next: (contaAtualizada) => {\n        this.contaSelecionada = contaAtualizada;\n      },\n      error: (err) => {\n        console.error('Erro ao carregar detalhes da conta:', err);\n        alert('Erro ao carregar detalhes da conta.');\n      },\n    });\n  }\n  sair(): void {\n    // Limpar as informações do usuário do localStorage\n    localStorage.removeItem('idUsuario');\n    \n    // Redirecionar para a página de login\n    this.router.navigate(['']);  // A rota de login pode variar dependendo de como está configurado no seu Angular\n  }\n  \n}\n","<div class=\"content-wrapper\">\n  <div class=\"container\">\n    <!-- Título e nome do usuário -->\n    <header class=\"header\">\n      <h1>Gerenciador da Conta</h1>\n    </header>\n\n    <!-- Formulário para criar conta (aparece somente se não houver nenhuma conta) -->\n    <section *ngIf=\"contas.length === 0\" class=\"create-account-section\">\n      <h3>Criar Conta</h3>\n      <label for=\"nomeTitular\" class=\"label\">Nome do Titular</label>\n      <input \n        type=\"text\" \n        id=\"nomeTitular\" \n        [(ngModel)]=\"nomeTitular\" \n        placeholder=\"Digite o nome do titular\" \n        class=\"input-text\" />\n      <button (click)=\"criarConta()\" class=\"btn-criar-conta\">Criar Conta</button>\n    </section>\n\n    <!-- Listagem de contas -->\n    <section class=\"accounts-section\">\n      <h3>Bem vindo!</h3>\n      <ul class=\"accounts-list\">\n        <li *ngFor=\"let conta of contas\" class=\"account-item\">\n          <button \n            (click)=\"selecionarConta(conta)\" \n            [class.selected]=\"conta === contaSelecionada\" \n            class=\"account-button\">\n            {{ conta.nomeTitular }}\n          </button>\n        </li>\n      </ul>\n    </section>\n\n    <!-- Se uma conta for selecionada -->\n    <section *ngIf=\"contaSelecionada\" class=\"account-details-section\">\n      <h3>Detalhes da Conta: {{ contaSelecionada.nomeTitular }}</h3>\n\n      <!-- Realizar Transação -->\n      <div class=\"transaction-section\">\n        <h4>Realizar Transação</h4>\n        <input \n          type=\"number\" \n          [(ngModel)]=\"valor\" \n          placeholder=\"Digite o valor\" \n          class=\"input-number\" />\n\n        <!-- Botões de Depósito e Saque -->\n        <button \n          (click)=\"realizarDeposito()\" \n          *ngIf=\"valor > 0\" \n          class=\"btn-deposito\">\n          Depositar\n        </button>\n\n        <button \n          (click)=\"realizarSaque()\" \n          *ngIf=\"valor > 0\" \n          class=\"btn-saque\">\n          Sacar\n        </button>\n      </div>\n\n      <!-- Extrato -->\n      <section class=\"extrato-container\">\n        <h4 class=\"extrato-title\">Extrato da Conta</h4>\n        <button class=\"btn-extrato\" (click)=\"carregarExtrato()\">Carregar Extrato</button>\n\n        <div *ngIf=\"extrato.length > 0\" class=\"extrato-list\">\n          <ul>\n            <li *ngFor=\"let transacao of extrato\" class=\"extrato-item\">\n              <span class=\"transacao-data\">{{ transacao.dataTransacao | date: 'dd/MM/yyyy HH:mm' }}</span> \n              <span class=\"transacao-tipo\">{{ transacao.tipo }}</span> \n              <span class=\"transacao-valor esquerda\">{{ transacao.valor | currency }}</span>\n            </li>\n          </ul>\n        </div>\n\n        <div *ngIf=\"extrato.length === 0\" class=\"no-transacoes\">\n          <p>Nenhuma transação registrada.</p>\n        </div>\n      </section>\n\n      <!-- Detalhes da Conta -->\n      <section class=\"conta-container\">\n        <div class=\"conta-detalhes\">\n          <p><strong>Saldo Atual: R</strong> <span class=\"conta-saldo\">{{ contaSelecionada.saldo | currency }}</span></p>\n        </div>\n      </section>\n    </section>\n\n    <!-- Exibição de erros -->\n    <section *ngIf=\"erro\" class=\"error-section\">\n      <p class=\"error-message\">Você ainda não tem nenhuma conta cadastrada!</p>\n    </section>\n  </div>\n  <button \n  (click)=\"sair()\" \n  class=\"btn-sair\">\n  Sair\n</button>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}