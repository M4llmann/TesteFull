{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ContaService = /*#__PURE__*/(() => {\n  class ContaService {\n    http;\n    baseUrl = 'http://seu-endpoint/api'; // Substitua pelo URL correto\n    constructor(http) {\n      this.http = http;\n    }\n    // Método para criar a conta\n    criarConta(dadosConta, idUsuario) {\n      return this.http.post(`${this.baseUrl}/usuario/${idUsuario}/conta`, dadosConta);\n    }\n    // Outros métodos permanecem os mesmos\n    listarContas(idUsuario) {\n      return this.http.get(`${this.baseUrl}/usuario/${idUsuario}/contas`);\n    }\n    getSaldo(idConta) {\n      return this.http.get(`${this.baseUrl}/conta/${idConta}/saldo`);\n    }\n    realizarDeposito(idConta, valor) {\n      return this.http.post(`${this.baseUrl}/conta/${idConta}/deposito`, {\n        valor\n      });\n    }\n    realizarSaque(idConta, valor) {\n      return this.http.post(`${this.baseUrl}/conta/${idConta}/saque`, {\n        valor\n      });\n    }\n    getExtrato(idConta) {\n      return this.http.get(`${this.baseUrl}/conta/${idConta}/extrato`);\n    }\n    static ɵfac = function ContaService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ContaService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ContaService,\n      factory: ContaService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ContaService;\n})();","map":{"version":3,"names":["ContaService","http","baseUrl","constructor","criarConta","dadosConta","idUsuario","post","listarContas","get","getSaldo","idConta","realizarDeposito","valor","realizarSaque","getExtrato","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mallmann\\Desktop\\Teste\\frontend\\src\\app\\services\\conta.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ContaDTO } from '../conta.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ContaService {\r\n  private baseUrl: string = 'http://seu-endpoint/api'; // Substitua pelo URL correto\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Método para criar a conta\r\n  criarConta(dadosConta: { nomeTitular: string }, idUsuario: number): Observable<ContaDTO> {\r\n    return this.http.post<ContaDTO>(`${this.baseUrl}/usuario/${idUsuario}/conta`, dadosConta);\r\n  }\r\n\r\n  // Outros métodos permanecem os mesmos\r\n  listarContas(idUsuario: number): Observable<ContaDTO[]> {\r\n    return this.http.get<ContaDTO[]>(`${this.baseUrl}/usuario/${idUsuario}/contas`);\r\n  }\r\n\r\n  getSaldo(idConta: number): Observable<number> {\r\n    return this.http.get<number>(`${this.baseUrl}/conta/${idConta}/saldo`);\r\n  }\r\n\r\n  realizarDeposito(idConta: number, valor: number): Observable<void> {\r\n    return this.http.post<void>(`${this.baseUrl}/conta/${idConta}/deposito`, { valor });\r\n  }\r\n\r\n  realizarSaque(idConta: number, valor: number): Observable<void> {\r\n    return this.http.post<void>(`${this.baseUrl}/conta/${idConta}/saque`, { valor });\r\n  }\r\n\r\n  getExtrato(idConta: number): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.baseUrl}/conta/${idConta}/extrato`);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,WAAaA,YAAY;EAAnB,MAAOA,YAAY;IAGHC,IAAA;IAFZC,OAAO,GAAW,yBAAyB,CAAC,CAAC;IAErDC,YAAoBF,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;IAAe;IAEvC;IACAG,UAAUA,CAACC,UAAmC,EAAEC,SAAiB;MAC/D,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAW,GAAG,IAAI,CAACL,OAAO,YAAYI,SAAS,QAAQ,EAAED,UAAU,CAAC;IAC3F;IAEA;IACAG,YAAYA,CAACF,SAAiB;MAC5B,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAa,GAAG,IAAI,CAACP,OAAO,YAAYI,SAAS,SAAS,CAAC;IACjF;IAEAI,QAAQA,CAACC,OAAe;MACtB,OAAO,IAAI,CAACV,IAAI,CAACQ,GAAG,CAAS,GAAG,IAAI,CAACP,OAAO,UAAUS,OAAO,QAAQ,CAAC;IACxE;IAEAC,gBAAgBA,CAACD,OAAe,EAAEE,KAAa;MAC7C,OAAO,IAAI,CAACZ,IAAI,CAACM,IAAI,CAAO,GAAG,IAAI,CAACL,OAAO,UAAUS,OAAO,WAAW,EAAE;QAAEE;MAAK,CAAE,CAAC;IACrF;IAEAC,aAAaA,CAACH,OAAe,EAAEE,KAAa;MAC1C,OAAO,IAAI,CAACZ,IAAI,CAACM,IAAI,CAAO,GAAG,IAAI,CAACL,OAAO,UAAUS,OAAO,QAAQ,EAAE;QAAEE;MAAK,CAAE,CAAC;IAClF;IAEAE,UAAUA,CAACJ,OAAe;MACxB,OAAO,IAAI,CAACV,IAAI,CAACQ,GAAG,CAAQ,GAAG,IAAI,CAACP,OAAO,UAAUS,OAAO,UAAU,CAAC;IACzE;;uCA7BWX,YAAY,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;;aAAZnB,YAAY;MAAAoB,OAAA,EAAZpB,YAAY,CAAAqB,IAAA;MAAAC,UAAA,EAFX;IAAM;;SAEPtB,YAAY;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}