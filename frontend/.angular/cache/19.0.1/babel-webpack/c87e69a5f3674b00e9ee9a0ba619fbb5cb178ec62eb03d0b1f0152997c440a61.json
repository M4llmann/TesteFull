{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/conta.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ContaComponent_div_2_div_22_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(3, 3, item_r3.data, \"dd/MM/yyyy HH:mm\"), \":\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", item_r3.descricao, \" - \", i0.ɵɵpipeBind2(5, 6, item_r3.valor, \"BRL\"), \" \");\n  }\n}\nfunction ContaComponent_div_2_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"h3\");\n    i0.ɵɵtext(2, \"Extrato\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, ContaComponent_div_2_div_22_li_4_Template, 6, 9, \"li\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.extrato);\n  }\n}\nfunction ContaComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Detalhes da Conta\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n    i0.ɵɵtext(5, \"ID da Conta:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\")(8, \"strong\");\n    i0.ɵɵtext(9, \"Saldo:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 2)(13, \"h3\");\n    i0.ɵɵtext(14, \"Realizar Transa\\u00E7\\u00E3o\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"input\", 3);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_div_2_Template_input_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.valor, $event) || (ctx_r1.valor = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_2_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.realizarDeposito());\n    });\n    i0.ɵɵtext(17, \"Depositar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_2_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.realizarSaque());\n    });\n    i0.ɵɵtext(19, \"Sacar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_2_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.mostrarExtrato = !ctx_r1.mostrarExtrato);\n    });\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(22, ContaComponent_div_2_div_22_Template, 5, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.idConta, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(11, 5, ctx_r1.saldo, \"BRL\"), \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.valor);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.mostrarExtrato ? \"Ocultar Extrato\" : \"Mostrar Extrato\", \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mostrarExtrato);\n  }\n}\nfunction ContaComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Criar Conta\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 10);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_div_3_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.nomeTitular, $event) || (ctx_r1.nomeTitular = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 11);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_div_3_Template_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.status, $event) || (ctx_r1.status = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementStart(5, \"option\", 12);\n    i0.ɵɵtext(6, \"Ativa\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"option\", 13);\n    i0.ɵɵtext(8, \"Inativa\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_3_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.criarConta());\n    });\n    i0.ɵɵtext(10, \"Criar Conta\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.nomeTitular);\n    i0.ɵɵadvance();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.status);\n  }\n}\nfunction ContaComponent_div_4_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"strong\");\n    i0.ɵɵtext(2, \"ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5, \"Titular:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementStart(7, \"strong\");\n    i0.ɵɵtext(8, \"Saldo:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const conta_r5 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", conta_r5.idConta, \" | \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", conta_r5.nomeTitular, \" | \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(10, 3, conta_r5.saldo, \"BRL\"), \" \");\n  }\n}\nfunction ContaComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"h2\");\n    i0.ɵɵtext(2, \"Contas Existentes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, ContaComponent_div_4_li_4_Template, 11, 6, \"li\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.contas);\n  }\n}\nfunction ContaComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.listarContas());\n    });\n    i0.ɵɵtext(2, \"Listar Contas\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let ContaComponent = /*#__PURE__*/(() => {\n  class ContaComponent {\n    contaService;\n    route;\n    idConta = null;\n    nomeTitular = '';\n    status = 'ATIVA'; // Novo campo de status\n    saldo = 0;\n    extrato = [];\n    contas = [];\n    valor = 0;\n    // Propriedade para controlar a exibição do extrato\n    mostrarExtrato = false;\n    constructor(contaService, route) {\n      this.contaService = contaService;\n      this.route = route;\n    }\n    ngOnInit() {\n      this.route.queryParams.subscribe(params => {\n        this.idConta = params['idConta'] ? +params['idConta'] : null;\n        if (this.idConta) {\n          this.carregarConta();\n        } else {\n          alert('ID da conta não encontrado!');\n        }\n      });\n    }\n    carregarConta() {\n      if (this.idConta) {\n        this.contaService.getSaldo(this.idConta).subscribe({\n          next: saldo => this.saldo = saldo,\n          error: err => console.error('Erro ao obter saldo:', err)\n        });\n        this.contaService.getExtrato(this.idConta).subscribe({\n          next: extrato => this.extrato = extrato,\n          error: err => console.error('Erro ao obter extrato:', err)\n        });\n      }\n    }\n    realizarDeposito() {\n      if (!this.idConta || this.valor <= 0) {\n        alert('Informe um valor válido para depósito.');\n        return;\n      }\n      this.contaService.realizarDeposito(this.idConta, this.valor).subscribe({\n        next: () => {\n          alert('Depósito realizado com sucesso!');\n          this.carregarConta();\n        },\n        error: () => alert('Erro ao realizar depósito.')\n      });\n    }\n    realizarSaque() {\n      if (!this.idConta || this.valor <= 0) {\n        alert('Informe um valor válido para saque.');\n        return;\n      }\n      this.contaService.realizarSaque(this.idConta, this.valor).subscribe({\n        next: () => {\n          alert('Saque realizado com sucesso!');\n          this.carregarConta();\n        },\n        error: err => {\n          alert('Erro ao realizar saque.');\n          console.error(err);\n        }\n      });\n    }\n    // Método para listar contas\n    listarContas() {\n      this.contaService.listarContas(this.contas.map(conta => conta.idConta)).subscribe({\n        next: contas => this.contas = contas,\n        error: err => console.error('Erro ao listar contas:', err)\n      });\n    }\n    // Método para criar uma conta\n    criarConta() {\n      if (!this.nomeTitular.trim() || !this.status.trim()) {\n        alert('Informe o nome do titular e o status para criar a conta.');\n        return;\n      }\n      // Passando o status junto ao nomeTitular\n      const contaDTO = {\n        nomeTitular: this.nomeTitular,\n        status: this.status\n      };\n      // Passando o idUsuario que pode ser obtido da sua aplicação ou como parâmetro\n      const idUsuario = 1; // Exemplo, deve ser o id do usuário logado\n      this.contaService.criarConta(contaDTO, idUsuario).subscribe({\n        next: novaConta => {\n          alert('Conta criada com sucesso!');\n          this.idConta = novaConta.idConta;\n          this.carregarConta();\n        },\n        error: err => console.error('Erro ao criar conta:', err)\n      });\n    }\n    static ɵfac = function ContaComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ContaComponent)(i0.ɵɵdirectiveInject(i1.ContaService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ContaComponent,\n      selectors: [[\"app-conta\"]],\n      decls: 6,\n      vars: 4,\n      consts: [[4, \"ngIf\"], [\"class\", \"listar-contas\", 4, \"ngIf\"], [1, \"transacao\"], [\"placeholder\", \"Digite o valor\", \"type\", \"number\", \"min\", \"1\", 1, \"input-transacao\", 3, \"ngModelChange\", \"ngModel\"], [1, \"btn\", \"btn-depositar\", 3, \"click\"], [1, \"btn\", \"btn-sacar\", 3, \"click\"], [1, \"btn\", \"btn-extrato\", 3, \"click\"], [\"class\", \"extrato\", 4, \"ngIf\"], [1, \"extrato\"], [4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Nome do Titular\", 1, \"input-nome-titular\", 3, \"ngModelChange\", \"ngModel\"], [1, \"input-status\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"ATIVA\"], [\"value\", \"INATIVA\"], [1, \"btn\", \"btn-criar\", 3, \"click\"], [1, \"listar-contas\"], [1, \"btn\", \"btn-listar\", 3, \"click\"]],\n      template: function ContaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h1\");\n          i0.ɵɵtext(1, \"Conta Banc\\u00E1ria\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, ContaComponent_div_2_Template, 23, 8, \"div\", 0)(3, ContaComponent_div_3_Template, 11, 2, \"div\", 0)(4, ContaComponent_div_4_Template, 5, 1, \"div\", 1)(5, ContaComponent_div_5_Template, 3, 0, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.idConta);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.idConta);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.contas.length > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.idConta);\n        }\n      },\n      dependencies: [CommonModule, i3.NgForOf, i3.NgIf, i3.CurrencyPipe, i3.DatePipe, FormsModule, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.MinValidator, i4.NgModel],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return ContaComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind2","item_r3","data","ɵɵtextInterpolate2","descricao","valor","ɵɵtemplate","ContaComponent_div_2_div_22_li_4_Template","ɵɵproperty","ctx_r1","extrato","ɵɵtwoWayListener","ContaComponent_div_2_Template_input_ngModelChange_15_listener","$event","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","ɵɵresetView","ɵɵlistener","ContaComponent_div_2_Template_button_click_16_listener","realizarDeposito","ContaComponent_div_2_Template_button_click_18_listener","realizarSaque","ContaComponent_div_2_Template_button_click_20_listener","mostrarExtrato","ContaComponent_div_2_div_22_Template","idConta","saldo","ɵɵtwoWayProperty","ContaComponent_div_3_Template_input_ngModelChange_3_listener","_r4","nomeTitular","ContaComponent_div_3_Template_select_ngModelChange_4_listener","status","ContaComponent_div_3_Template_button_click_9_listener","criarConta","conta_r5","ContaComponent_div_4_li_4_Template","contas","ContaComponent_div_5_Template_button_click_1_listener","_r6","listarContas","ContaComponent","contaService","route","constructor","ngOnInit","queryParams","subscribe","params","carregarConta","alert","getSaldo","next","error","err","console","getExtrato","map","conta","trim","contaDTO","idUsuario","novaConta","ɵɵdirectiveInject","i1","ContaService","i2","ActivatedRoute","selectors","decls","vars","consts","template","ContaComponent_Template","rf","ctx","ContaComponent_div_2_Template","ContaComponent_div_3_Template","ContaComponent_div_4_Template","ContaComponent_div_5_Template","length","i3","NgForOf","NgIf","CurrencyPipe","DatePipe","i4","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","SelectControlValueAccessor","NgControlStatus","MinValidator","NgModel","styles"],"sources":["C:\\Users\\Mallmann\\Desktop\\Tentativa\\frontend\\src\\app\\conta-component\\conta-component.component.ts","C:\\Users\\Mallmann\\Desktop\\Tentativa\\frontend\\src\\app\\conta-component\\conta-component.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ContaService } from '../services/conta.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ContaDTO } from '../conta.model';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-conta',\r\n  templateUrl: './conta-component.component.html',\r\n  styleUrls: ['./conta-component.component.css'],\r\n  imports: [CommonModule, FormsModule],\r\n})\r\nexport class ContaComponent implements OnInit {\r\n  idConta: number | null = null;\r\n  nomeTitular: string = '';\r\n  status: string = 'ATIVA';  // Novo campo de status\r\n  saldo: number = 0;\r\n  extrato: any[] = [];\r\n  contas: ContaDTO[] = [];\r\n  valor: number = 0;\r\n\r\n  // Propriedade para controlar a exibição do extrato\r\n  mostrarExtrato: boolean = false;\r\n\r\n  constructor(private contaService: ContaService, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe((params) => {\r\n      this.idConta = params['idConta'] ? +params['idConta'] : null;\r\n      if (this.idConta) {\r\n        this.carregarConta();\r\n      } else {\r\n        alert('ID da conta não encontrado!');\r\n      }\r\n    });\r\n  }\r\n\r\n  carregarConta(): void {\r\n    if (this.idConta) {\r\n      this.contaService.getSaldo(this.idConta).subscribe({\r\n        next: (saldo) => (this.saldo = saldo),\r\n        error: (err) => console.error('Erro ao obter saldo:', err),\r\n      });\r\n\r\n      this.contaService.getExtrato(this.idConta).subscribe({\r\n        next: (extrato) => (this.extrato = extrato),\r\n        error: (err) => console.error('Erro ao obter extrato:', err),\r\n      });\r\n    }\r\n  }\r\n\r\n  realizarDeposito(): void {\r\n    if (!this.idConta || this.valor <= 0) {\r\n      alert('Informe um valor válido para depósito.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.realizarDeposito(this.idConta, this.valor).subscribe({\r\n      next: () => {\r\n        alert('Depósito realizado com sucesso!');\r\n        this.carregarConta();\r\n      },\r\n      error: () => alert('Erro ao realizar depósito.'),\r\n    });\r\n  }\r\n\r\n  realizarSaque(): void {\r\n    if (!this.idConta || this.valor <= 0) {\r\n      alert('Informe um valor válido para saque.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.realizarSaque(this.idConta, this.valor).subscribe({\r\n      next: () => {\r\n        alert('Saque realizado com sucesso!');\r\n        this.carregarConta();\r\n      },\r\n      error: (err) => {\r\n        alert('Erro ao realizar saque.');\r\n        console.error(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  // Método para listar contas\r\n  listarContas(): void {\r\n    this.contaService.listarContas(this.contas.map(conta => conta.idConta)).subscribe({\r\n      next: (contas) => (this.contas = contas),\r\n      error: (err) => console.error('Erro ao listar contas:', err),\r\n    });\r\n  }\r\n\r\n  // Método para criar uma conta\r\n  criarConta(): void {\r\n    if (!this.nomeTitular.trim() || !this.status.trim()) {\r\n      alert('Informe o nome do titular e o status para criar a conta.');\r\n      return;\r\n    }\r\n\r\n    // Passando o status junto ao nomeTitular\r\n    const contaDTO = { nomeTitular: this.nomeTitular, status: this.status };\r\n\r\n    // Passando o idUsuario que pode ser obtido da sua aplicação ou como parâmetro\r\n    const idUsuario = 1; // Exemplo, deve ser o id do usuário logado\r\n\r\n    this.contaService.criarConta(contaDTO, idUsuario).subscribe({\r\n      next: (novaConta) => {\r\n        alert('Conta criada com sucesso!');\r\n        this.idConta = novaConta.idConta;\r\n        this.carregarConta();\r\n      },\r\n      error: (err) => console.error('Erro ao criar conta:', err),\r\n    });\r\n  }\r\n}\r\n","<h1>Conta Bancária</h1>\r\n\r\n<!-- Seção da conta -->\r\n<div *ngIf=\"idConta\">\r\n  <h2>Detalhes da Conta</h2>\r\n  <p><strong>ID da Conta:</strong> {{ idConta }}</p>\r\n  <p><strong>Saldo:</strong> {{ saldo | currency:'BRL' }}</p>\r\n\r\n  <!-- Seção de depósito e saque -->\r\n  <div class=\"transacao\">\r\n    <h3>Realizar Transação</h3>\r\n    <input\r\n      [(ngModel)]=\"valor\"\r\n      placeholder=\"Digite o valor\"\r\n      type=\"number\"\r\n      min=\"1\"\r\n      class=\"input-transacao\"\r\n    />\r\n    <button (click)=\"realizarDeposito()\" class=\"btn btn-depositar\">Depositar</button>\r\n    <button (click)=\"realizarSaque()\" class=\"btn btn-sacar\">Sacar</button>\r\n  </div>\r\n\r\n  <!-- Botão para exibir ou ocultar extrato -->\r\n  <button (click)=\"mostrarExtrato = !mostrarExtrato\" class=\"btn btn-extrato\">\r\n    {{ mostrarExtrato ? 'Ocultar Extrato' : 'Mostrar Extrato' }}\r\n  </button>\r\n\r\n  <!-- Extrato da conta -->\r\n  <div *ngIf=\"mostrarExtrato\" class=\"extrato\">\r\n    <h3>Extrato</h3>\r\n    <ul>\r\n      <li *ngFor=\"let item of extrato\">\r\n        <strong>{{ item.data | date:'dd/MM/yyyy HH:mm' }}:</strong> \r\n        {{ item.descricao }} - {{ item.valor | currency:'BRL' }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<!-- Seção para criar conta -->\r\n<div *ngIf=\"!idConta\">\r\n  <h2>Criar Conta</h2>\r\n  <input \r\n    [(ngModel)]=\"nomeTitular\" \r\n    placeholder=\"Nome do Titular\" \r\n    class=\"input-nome-titular\" \r\n  />\r\n  <select [(ngModel)]=\"status\" class=\"input-status\">\r\n    <option value=\"ATIVA\">Ativa</option>\r\n    <option value=\"INATIVA\">Inativa</option>\r\n  </select>\r\n  <button (click)=\"criarConta()\" class=\"btn btn-criar\">Criar Conta</button>\r\n</div>\r\n\r\n<!-- Seção para listar contas -->\r\n<div *ngIf=\"contas.length > 0\" class=\"listar-contas\">\r\n  <h2>Contas Existentes</h2>\r\n  <ul>\r\n    <li *ngFor=\"let conta of contas\">\r\n      <strong>ID:</strong> {{ conta.idConta }} |\r\n      <strong>Titular:</strong> {{ conta.nomeTitular }} |\r\n      <strong>Saldo:</strong> {{ conta.saldo | currency:'BRL' }}\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<!-- Botão para listar contas -->\r\n<div *ngIf=\"idConta\">\r\n  <button (click)=\"listarContas()\" class=\"btn btn-listar\">Listar Contas</button>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}