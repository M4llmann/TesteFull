{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UsuarioService = /*#__PURE__*/(() => {\n  class UsuarioService {\n    http;\n    apiUrl = 'http://localhost:8080/api/usuarios'; // URL base da API\n    constructor(http) {\n      this.http = http;\n    }\n    // Método para criar um usuário\n    criarUsuario(usuarioDTO) {\n      return this.http.post(`${this.apiUrl}`, usuarioDTO);\n    }\n    // Método para buscar um usuário pelo email\n    buscarUsuarioPorEmail(email) {\n      return this.http.get(`${this.apiUrl}/${email}`);\n    }\n    login(usuario) {\n      return this.http.post(`${this.apiUrl}/login`, usuario);\n    }\n    static ɵfac = function UsuarioService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || UsuarioService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UsuarioService,\n      factory: UsuarioService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UsuarioService;\n})();","map":{"version":3,"names":["UsuarioService","http","apiUrl","constructor","criarUsuario","usuarioDTO","post","buscarUsuarioPorEmail","email","get","login","usuario","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mallmann\\Desktop\\Teste\\frontend\\src\\app\\services\\usuario.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Usuario } from '../usuario.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UsuarioService {\r\n  private apiUrl = 'http://localhost:8080/api/usuarios'; // URL base da API\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Método para criar um usuário\r\n  criarUsuario(usuarioDTO: { email: string; senha: string }): Observable<Usuario> {\r\n    return this.http.post<Usuario>(`${this.apiUrl}`, usuarioDTO);\r\n  }\r\n\r\n  // Método para buscar um usuário pelo email\r\n  buscarUsuarioPorEmail(email: string): Observable<Usuario> {\r\n    return this.http.get<Usuario>(`${this.apiUrl}/${email}`);\r\n  }\r\n  login(usuario: any): Observable<Usuario> {\r\n    return this.http.post<Usuario>(`${this.apiUrl}/login`, usuario);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,WAAaA,cAAc;EAArB,MAAOA,cAAc;IAGLC,IAAA;IAFZC,MAAM,GAAG,oCAAoC,CAAC,CAAC;IAEvDC,YAAoBF,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;IAAe;IAEvC;IACAG,YAAYA,CAACC,UAA4C;MACvD,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAU,GAAG,IAAI,CAACJ,MAAM,EAAE,EAAEG,UAAU,CAAC;IAC9D;IAEA;IACAE,qBAAqBA,CAACC,KAAa;MACjC,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAU,GAAG,IAAI,CAACP,MAAM,IAAIM,KAAK,EAAE,CAAC;IAC1D;IACAE,KAAKA,CAACC,OAAY;MAChB,OAAO,IAAI,CAACV,IAAI,CAACK,IAAI,CAAU,GAAG,IAAI,CAACJ,MAAM,QAAQ,EAAES,OAAO,CAAC;IACjE;;uCAhBWX,cAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;;aAAdf,cAAc;MAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;MAAAC,UAAA,EAFb;IAAM;;SAEPlB,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}