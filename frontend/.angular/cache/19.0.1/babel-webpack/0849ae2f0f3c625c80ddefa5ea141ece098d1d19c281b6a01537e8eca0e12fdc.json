{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/conta.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ContaComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_2_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.realizarDeposito());\n    });\n    i0.ɵɵtext(5, \"Depositar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_2_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.realizarSaque());\n    });\n    i0.ɵɵtext(7, \"Sacar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Saldo: \", i0.ɵɵpipeBind1(3, 1, ctx_r1.saldo), \"\");\n  }\n}\nfunction ContaComponent_div_3_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(item_r3);\n  }\n}\nfunction ContaComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Extrato\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, ContaComponent_div_3_li_4_Template, 2, 1, \"li\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.extrato);\n  }\n}\nfunction ContaComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Criar Conta\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 3);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_div_4_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.nomeTitular, $event) || (ctx_r1.nomeTitular = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_4_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.criarConta());\n    });\n    i0.ɵɵtext(5, \"Criar Conta\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.nomeTitular);\n  }\n}\nexport let ContaComponent = /*#__PURE__*/(() => {\n  class ContaComponent {\n    contaService;\n    idConta = null;\n    nomeTitular = '';\n    saldo = 0;\n    extrato = [];\n    valor = 0;\n    mostrarExtrato = false;\n    constructor(contaService) {\n      this.contaService = contaService;\n    }\n    ngOnInit() {\n      if (this.idConta) {\n        this.atualizarSaldo();\n        this.atualizarExtrato();\n      }\n    }\n    criarConta() {\n      if (this.nomeTitular.trim() === '') {\n        alert('Preencha o nome do titular para criar uma conta.');\n        return;\n      }\n      const contaDTO = {\n        nomeTitular: this.nomeTitular,\n        status: 'true'\n      };\n      this.contaService.criarConta(contaDTO).subscribe({\n        next: conta => {\n          this.idConta = conta.idConta;\n          this.saldo = conta.saldo;\n          alert('Conta criada com sucesso!');\n          this.atualizarExtrato();\n        },\n        error: err => {\n          console.error('Erro ao criar conta', err);\n          alert('Erro ao criar conta. Tente novamente.');\n        }\n      });\n    }\n    realizarDeposito() {\n      if (!this.idConta || this.valor <= 0) {\n        alert('Informe um valor válido para depósito.');\n        return;\n      }\n      this.contaService.realizarDeposito(this.idConta, this.valor).subscribe({\n        next: () => {\n          alert('Depósito realizado com sucesso!');\n          this.atualizarSaldo();\n          this.atualizarExtrato();\n        },\n        error: () => alert('Erro ao realizar depósito. Tente novamente.')\n      });\n    }\n    realizarSaque() {\n      if (!this.idConta || this.valor <= 0) {\n        alert('Informe um valor válido para saque.');\n        return;\n      }\n      this.contaService.realizarSaque(this.idConta, this.valor).subscribe({\n        next: () => {\n          alert('Saque realizado com sucesso!');\n          this.atualizarSaldo();\n          this.atualizarExtrato();\n        },\n        error: err => {\n          alert('Erro ao realizar saque. Tente novamente.');\n          console.error(err);\n        }\n      });\n    }\n    atualizarSaldo() {\n      if (this.idConta) {\n        this.contaService.getSaldo(this.idConta).subscribe({\n          next: saldo => this.saldo = saldo,\n          error: err => console.error('Erro ao obter saldo:', err)\n        });\n      }\n    }\n    atualizarExtrato() {\n      if (this.idConta) {\n        this.contaService.getExtrato(this.idConta).subscribe({\n          next: extrato => this.extrato = extrato,\n          error: err => console.error('Erro ao obter extrato:', err)\n        });\n      }\n    }\n    static ɵfac = function ContaComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ContaComponent)(i0.ɵɵdirectiveInject(i1.ContaService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ContaComponent,\n      selectors: [[\"app-conta\"]],\n      decls: 5,\n      vars: 3,\n      consts: [[4, \"ngIf\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Nome do Titular\", 3, \"ngModelChange\", \"ngModel\"]],\n      template: function ContaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h1\");\n          i0.ɵɵtext(1, \"Conta Banc\\u00E1ria\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, ContaComponent_div_2_Template, 8, 3, \"div\", 0)(3, ContaComponent_div_3_Template, 5, 1, \"div\", 0)(4, ContaComponent_div_4_Template, 6, 1, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.idConta);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.mostrarExtrato);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.idConta);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, i2.CurrencyPipe, FormsModule, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return ContaComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ContaComponent_div_2_Template_button_click_4_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","realizarDeposito","ContaComponent_div_2_Template_button_click_6_listener","realizarSaque","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","saldo","ɵɵtextInterpolate","item_r3","ɵɵtemplate","ContaComponent_div_3_li_4_Template","ɵɵproperty","extrato","ɵɵtwoWayListener","ContaComponent_div_4_Template_input_ngModelChange_3_listener","$event","_r4","ɵɵtwoWayBindingSet","nomeTitular","ContaComponent_div_4_Template_button_click_4_listener","criarConta","ɵɵtwoWayProperty","ContaComponent","contaService","idConta","valor","mostrarExtrato","constructor","ngOnInit","atualizarSaldo","atualizarExtrato","trim","alert","contaDTO","status","subscribe","next","conta","error","err","console","getSaldo","getExtrato","ɵɵdirectiveInject","i1","ContaService","selectors","decls","vars","consts","template","ContaComponent_Template","rf","ctx","ContaComponent_div_2_Template","ContaComponent_div_3_Template","ContaComponent_div_4_Template","i2","NgForOf","NgIf","CurrencyPipe","i3","DefaultValueAccessor","NgControlStatus","NgModel","styles"],"sources":["C:\\Users\\Mallmann\\Desktop\\Tentativa\\frontend\\src\\app\\conta-component\\conta-component.component.ts","C:\\Users\\Mallmann\\Desktop\\Tentativa\\frontend\\src\\app\\conta-component\\conta-component.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ContaService } from '../services/conta.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-conta',\r\n  templateUrl: './conta-component.component.html',\r\n  styleUrls: ['./conta-component.component.css'],\r\n  imports: [CommonModule,  FormsModule], // Adicionado aqui\r\n})\r\nexport class ContaComponent implements OnInit {\r\n  idConta: number | null = null;\r\n  nomeTitular: string = '';\r\n  saldo: number = 0;\r\n  extrato: any[] = [];\r\n  valor: number = 0;\r\n  mostrarExtrato: boolean = false;\r\n\r\n  constructor(private contaService: ContaService) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.idConta) {\r\n      this.atualizarSaldo();\r\n      this.atualizarExtrato();\r\n    }\r\n  }\r\n\r\n  criarConta(): void {\r\n    if (this.nomeTitular.trim() === '') {\r\n      alert('Preencha o nome do titular para criar uma conta.');\r\n      return;\r\n    }\r\n\r\n    const contaDTO = {\r\n      nomeTitular: this.nomeTitular,\r\n      status: 'true',\r\n    };\r\n\r\n    this.contaService.criarConta(contaDTO).subscribe({\r\n      next: (conta: any) => {\r\n        this.idConta = conta.idConta;\r\n        this.saldo = conta.saldo;\r\n        alert('Conta criada com sucesso!');\r\n        this.atualizarExtrato();\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao criar conta', err);\r\n        alert('Erro ao criar conta. Tente novamente.');\r\n      },\r\n    });\r\n  }\r\n\r\n  realizarDeposito(): void {\r\n    if (!this.idConta || this.valor <= 0) {\r\n      alert('Informe um valor válido para depósito.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.realizarDeposito(this.idConta, this.valor).subscribe({\r\n      next: () => {\r\n        alert('Depósito realizado com sucesso!');\r\n        this.atualizarSaldo();\r\n        this.atualizarExtrato();\r\n      },\r\n      error: () => alert('Erro ao realizar depósito. Tente novamente.')\r\n    });\r\n  }\r\n\r\n  realizarSaque(): void {\r\n    if (!this.idConta || this.valor <= 0) {\r\n      alert('Informe um valor válido para saque.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.realizarSaque(this.idConta, this.valor).subscribe({\r\n      next: () => {\r\n        alert('Saque realizado com sucesso!');\r\n        this.atualizarSaldo();\r\n        this.atualizarExtrato();\r\n      },\r\n      error: (err) => {\r\n        alert('Erro ao realizar saque. Tente novamente.');\r\n        console.error(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  private atualizarSaldo(): void {\r\n    if (this.idConta) {\r\n      this.contaService.getSaldo(this.idConta).subscribe({\r\n        next: (saldo) => (this.saldo = saldo),\r\n        error: (err) => console.error('Erro ao obter saldo:', err),\r\n      });\r\n    }\r\n  }\r\n\r\n  private atualizarExtrato(): void {\r\n    if (this.idConta) {\r\n      this.contaService.getExtrato(this.idConta).subscribe({\r\n        next: (extrato) => (this.extrato = extrato),\r\n        error: (err) => console.error('Erro ao obter extrato:', err),\r\n      });\r\n    }\r\n  }\r\n}\r\n","<h1>Conta Bancária</h1>\r\n<div *ngIf=\"idConta\">\r\n  <p>Saldo: {{ saldo | currency }}</p>\r\n  <button (click)=\"realizarDeposito()\">Depositar</button>\r\n  <button (click)=\"realizarSaque()\">Sacar</button>\r\n</div>\r\n<div *ngIf=\"mostrarExtrato\">\r\n  <h2>Extrato</h2>\r\n  <ul>\r\n    <li *ngFor=\"let item of extrato\">{{ item }}</li>\r\n  </ul>\r\n</div>\r\n<div *ngIf=\"!idConta\">\r\n  <h2>Criar Conta</h2>\r\n  <input [(ngModel)]=\"nomeTitular\" placeholder=\"Nome do Titular\" />\r\n  <button (click)=\"criarConta()\">Criar Conta</button>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}