{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/conta.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ContaComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Criar Conta\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 4);\n    i0.ɵɵtext(4, \"Nome do Titular\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 5);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_div_3_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.nomeTitular, $event) || (ctx_r1.nomeTitular = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_3_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.criarConta());\n    });\n    i0.ɵɵtext(7, \"Criar Conta\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.nomeTitular);\n  }\n}\nfunction ContaComponent_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 6);\n    i0.ɵɵlistener(\"click\", function ContaComponent_li_8_Template_li_click_0_listener() {\n      const conta_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.selecionarConta(conta_r4));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const conta_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"selected\", conta_r4 === ctx_r1.contaSelecionada);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", conta_r4.nomeTitular, \" - Saldo: \", i0.ɵɵpipeBind1(2, 4, conta_r4.saldo), \" \");\n  }\n}\nfunction ContaComponent_div_9_div_20_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" - \");\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \" - \");\n    i0.ɵɵelementStart(8, \"span\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transacao_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 3, transacao_r6.dataTransacao, \"dd/MM/yyyy HH:mm\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(transacao_r6.tipo);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(10, 6, transacao_r6.valor));\n  }\n}\nfunction ContaComponent_div_9_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ul\");\n    i0.ɵɵtemplate(2, ContaComponent_div_9_div_20_li_2_Template, 11, 8, \"li\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.extrato);\n  }\n}\nfunction ContaComponent_div_9_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Nenhuma transa\\u00E7\\u00E3o registrada.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ContaComponent_div_9_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\")(2, \"strong\");\n    i0.ɵɵtext(3, \"Saldo Atual:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 1, ctx_r1.contaSelecionada.saldo), \"\");\n  }\n}\nfunction ContaComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"h4\");\n    i0.ɵɵtext(5, \"Realizar Dep\\u00F3sito\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 7);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_div_9_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.valor, $event) || (ctx_r1.valor = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_9_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.realizarDeposito());\n    });\n    i0.ɵɵtext(8, \"Depositar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\")(10, \"h4\");\n    i0.ɵɵtext(11, \"Realizar Saque\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 8);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_div_9_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.valor, $event) || (ctx_r1.valor = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_9_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.realizarSaque());\n    });\n    i0.ɵɵtext(14, \"Sacar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\")(16, \"h4\");\n    i0.ɵɵtext(17, \"Extrato da Conta\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_9_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.carregarExtrato());\n    });\n    i0.ɵɵtext(19, \"Carregar Extrato\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(20, ContaComponent_div_9_div_20_Template, 3, 1, \"div\", 1)(21, ContaComponent_div_9_div_21_Template, 3, 0, \"div\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\")(23, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_9_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.carregarDetalhesConta());\n    });\n    i0.ɵɵtext(24, \"Carregar Detalhes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(25, ContaComponent_div_9_div_25_Template, 6, 3, \"div\", 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Detalhes da Conta: \", ctx_r1.contaSelecionada.nomeTitular, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.valor);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.valor);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.extrato.length > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.extrato.length === 0);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.contaSelecionada);\n  }\n}\nfunction ContaComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"p\");\n    i0.ɵɵtext(2, \"Ocorreu um erro ao carregar as contas. Tente novamente.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let ContaComponent = /*#__PURE__*/(() => {\n  class ContaComponent {\n    contaService;\n    contas = [];\n    contaSelecionada = null;\n    nomeTitular = '';\n    valor = 0;\n    mostrarExtrato = false;\n    extrato = []; // Tipagem correta para o extrato\n    erro = false;\n    constructor(contaService) {\n      this.contaService = contaService;\n    }\n    ngOnInit() {\n      this.listarContas();\n    }\n    listarContas() {\n      const idUsuario = localStorage.getItem('idUsuario');\n      if (!idUsuario) {\n        alert('Usuário não autenticado! Faça login para listar as contas.');\n        return;\n      }\n      this.contaService.listarContasPorUsuario().subscribe({\n        next: dados => {\n          console.log('Contas retornadas pelo backend:', dados);\n          // Verifica se o retorno é um objeto único ou um array\n          if (Array.isArray(dados)) {\n            this.contas = dados;\n          } else {\n            this.contas = [dados]; // Converte o objeto único em um array\n          }\n          this.erro = false;\n        },\n        error: err => {\n          console.error('Erro ao listar contas:', err);\n          this.erro = true;\n          alert('Não foi possível listar as contas.');\n        }\n      });\n    }\n    selecionarConta(conta) {\n      this.contaSelecionada = conta;\n      this.mostrarExtrato = false; // Ocultar extrato ao selecionar outra conta\n    }\n    criarConta() {\n      const idUsuario = localStorage.getItem('idUsuario');\n      if (!idUsuario) {\n        alert('Usuário não autenticado!');\n        return;\n      }\n      if (!this.nomeTitular.trim()) {\n        alert('Informe o nome do titular para criar a conta.');\n        return;\n      }\n      this.contaService.criarConta({\n        nomeTitular: this.nomeTitular\n      }, +idUsuario).subscribe({\n        next: novaConta => {\n          console.log('Resposta da API (novaConta):', novaConta); // Verifique o que está sendo retornado\n          alert('Conta criada com sucesso!');\n          if (novaConta) {\n            this.contas.push(novaConta); // Adiciona a nova conta à lista\n            this.selecionarConta(novaConta); // Seleciona a conta automaticamente\n          } else {\n            console.error('Erro: A resposta da API não contém uma conta válida.');\n          }\n        },\n        error: err => {\n          console.error('Erro ao criar conta:', err);\n          alert('Erro ao criar a conta.');\n        }\n      });\n    }\n    realizarDeposito() {\n      if (!this.contaSelecionada || this.valor <= 0) {\n        alert('Informe um valor válido para depósito.');\n        return;\n      }\n      this.contaService.realizarDeposito(this.contaSelecionada.idConta, this.valor).subscribe({\n        next: contaAtualizada => {\n          alert('Depósito realizado com sucesso!');\n          this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\n          this.valor = 0; // Limpa o campo de valor\n        },\n        error: err => {\n          console.error('Erro ao realizar depósito:', err);\n          alert('Erro ao realizar depósito. Tente novamente.');\n        }\n      });\n    }\n    realizarSaque() {\n      if (!this.contaSelecionada || this.valor <= 0) {\n        alert('Informe um valor válido para saque.');\n        return;\n      }\n      this.contaService.realizarSaque(this.contaSelecionada.idConta, this.valor).subscribe({\n        next: contaAtualizada => {\n          alert('Saque realizado com sucesso!');\n          this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\n          this.valor = 0; // Limpa o campo de valor\n        },\n        error: err => {\n          console.error('Erro ao realizar saque:', err);\n          alert('Erro ao realizar saque. Tente novamente.');\n        }\n      });\n    }\n    carregarExtrato() {\n      if (!this.contaSelecionada) {\n        alert('Selecione uma conta para visualizar o extrato.');\n        return;\n      }\n      this.contaService.getExtrato(this.contaSelecionada.idConta).subscribe({\n        next: extrato => {\n          this.extrato = extrato;\n        },\n        error: err => {\n          console.error('Erro ao carregar extrato:', err);\n          alert('Erro ao carregar o extrato.');\n        }\n      });\n    }\n    carregarDetalhesConta() {\n      if (!this.contaSelecionada) {\n        return;\n      }\n      this.contaService.obterDetalhesConta(this.contaSelecionada.idConta).subscribe({\n        next: contaAtualizada => {\n          this.contaSelecionada = contaAtualizada;\n        },\n        error: err => {\n          console.error('Erro ao carregar detalhes da conta:', err);\n          alert('Erro ao carregar detalhes da conta.');\n        }\n      });\n    }\n    static ɵfac = function ContaComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ContaComponent)(i0.ɵɵdirectiveInject(i1.ContaService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ContaComponent,\n      selectors: [[\"app-conta\"]],\n      decls: 11,\n      vars: 4,\n      consts: [[1, \"container\"], [4, \"ngIf\"], [3, \"selected\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"nomeTitular\"], [\"type\", \"text\", \"id\", \"nomeTitular\", \"placeholder\", \"Digite o nome do titular\", 3, \"ngModelChange\", \"ngModel\"], [3, \"click\"], [\"type\", \"number\", \"placeholder\", \"Valor do Dep\\u00F3sito\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"placeholder\", \"Valor do Saque\", 3, \"ngModelChange\", \"ngModel\"], [4, \"ngFor\", \"ngForOf\"], [1, \"error\"]],\n      template: function ContaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"Gerenciar Contas\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, ContaComponent_div_3_Template, 8, 1, \"div\", 1);\n          i0.ɵɵelementStart(4, \"div\")(5, \"h3\");\n          i0.ɵɵtext(6, \"Contas Dispon\\u00EDveis\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"ul\");\n          i0.ɵɵtemplate(8, ContaComponent_li_8_Template, 3, 6, \"li\", 2);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(9, ContaComponent_div_9_Template, 26, 6, \"div\", 1)(10, ContaComponent_div_10_Template, 3, 0, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.contas.length === 0);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.contas);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.contaSelecionada);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.erro);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, i2.CurrencyPipe, i2.DatePipe, FormsModule, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return ContaComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtwoWayListener","ContaComponent_div_3_Template_input_ngModelChange_5_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","nomeTitular","ɵɵresetView","ɵɵlistener","ContaComponent_div_3_Template_button_click_6_listener","criarConta","ɵɵadvance","ɵɵtwoWayProperty","ContaComponent_li_8_Template_li_click_0_listener","conta_r4","_r3","$implicit","selecionarConta","ɵɵclassProp","contaSelecionada","ɵɵtextInterpolate2","ɵɵpipeBind1","saldo","ɵɵtextInterpolate","ɵɵpipeBind2","transacao_r6","dataTransacao","tipo","valor","ɵɵtemplate","ContaComponent_div_9_div_20_li_2_Template","ɵɵproperty","extrato","ɵɵtextInterpolate1","ContaComponent_div_9_Template_input_ngModelChange_6_listener","_r5","ContaComponent_div_9_Template_button_click_7_listener","realizarDeposito","ContaComponent_div_9_Template_input_ngModelChange_12_listener","ContaComponent_div_9_Template_button_click_13_listener","realizarSaque","ContaComponent_div_9_Template_button_click_18_listener","carregarExtrato","ContaComponent_div_9_div_20_Template","ContaComponent_div_9_div_21_Template","ContaComponent_div_9_Template_button_click_23_listener","carregarDetalhesConta","ContaComponent_div_9_div_25_Template","length","ContaComponent","contaService","contas","mostrarExtrato","erro","constructor","ngOnInit","listarContas","idUsuario","localStorage","getItem","alert","listarContasPorUsuario","subscribe","next","dados","console","log","Array","isArray","error","err","conta","trim","novaConta","push","idConta","contaAtualizada","getExtrato","obterDetalhesConta","ɵɵdirectiveInject","i1","ContaService","selectors","decls","vars","consts","template","ContaComponent_Template","rf","ctx","ContaComponent_div_3_Template","ContaComponent_li_8_Template","ContaComponent_div_9_Template","ContaComponent_div_10_Template","i2","NgForOf","NgIf","CurrencyPipe","DatePipe","i3","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgModel","styles"],"sources":["C:\\Users\\Mallmann\\Desktop\\Teste\\frontend\\src\\app\\conta-component\\conta-component.component.ts","C:\\Users\\Mallmann\\Desktop\\Teste\\frontend\\src\\app\\conta-component\\conta-component.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ContaService } from '../services/conta.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ContaDTO } from '../conta.model';\r\nimport { TransacaoDTO } from '../transacao.model';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-conta',\r\n  templateUrl: './conta-component.component.html',\r\n  styleUrls: ['./conta-component.component.css'],\r\n  imports: [CommonModule, FormsModule],\r\n})\r\nexport class ContaComponent implements OnInit {\r\n  contas: ContaDTO[] = [];\r\n  contaSelecionada: ContaDTO | null = null;\r\n  nomeTitular: string = '';\r\n  valor: number = 0;\r\n  mostrarExtrato: boolean = false;\r\n  extrato: TransacaoDTO[] = []; // Tipagem correta para o extrato\r\n    erro: boolean = false;\r\n\r\n  constructor(private contaService: ContaService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.listarContas();\r\n  }\r\n\r\n  listarContas(): void {\r\n    const idUsuario = localStorage.getItem('idUsuario');\r\n    if (!idUsuario) {\r\n      alert('Usuário não autenticado! Faça login para listar as contas.');\r\n      return;\r\n    }\r\n  \r\n    this.contaService.listarContasPorUsuario().subscribe({\r\n      next: (dados: ContaDTO | ContaDTO[]) => {\r\n        console.log('Contas retornadas pelo backend:', dados);\r\n  \r\n        // Verifica se o retorno é um objeto único ou um array\r\n        if (Array.isArray(dados)) {\r\n          this.contas = dados;\r\n        } else {\r\n          this.contas = [dados]; // Converte o objeto único em um array\r\n        }\r\n  \r\n        this.erro = false;\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao listar contas:', err);\r\n        this.erro = true;\r\n        alert('Não foi possível listar as contas.');\r\n      },\r\n    });\r\n  }\r\n  \r\n  \r\n  \r\n\r\n  selecionarConta(conta: ContaDTO): void {\r\n    this.contaSelecionada = conta;\r\n    this.mostrarExtrato = false; // Ocultar extrato ao selecionar outra conta\r\n  }\r\n\r\n  criarConta(): void {\r\n    const idUsuario = localStorage.getItem('idUsuario');\r\n    if (!idUsuario) {\r\n      alert('Usuário não autenticado!');\r\n      return;\r\n    }\r\n  \r\n    if (!this.nomeTitular.trim()) {\r\n      alert('Informe o nome do titular para criar a conta.');\r\n      return;\r\n    }\r\n  \r\n    this.contaService.criarConta({ nomeTitular: this.nomeTitular }, +idUsuario).subscribe({\r\n      next: (novaConta: ContaDTO) => {\r\n        console.log('Resposta da API (novaConta):', novaConta); // Verifique o que está sendo retornado\r\n        alert('Conta criada com sucesso!');\r\n        if (novaConta) {\r\n          this.contas.push(novaConta);  // Adiciona a nova conta à lista\r\n          this.selecionarConta(novaConta);  // Seleciona a conta automaticamente\r\n        } else {\r\n          console.error('Erro: A resposta da API não contém uma conta válida.');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao criar conta:', err);\r\n        alert('Erro ao criar a conta.');\r\n      }\r\n    });\r\n  }\r\n  \r\n  \r\n  \r\n\r\n  realizarDeposito(): void {\r\n    if (!this.contaSelecionada || this.valor <= 0) {\r\n      alert('Informe um valor válido para depósito.');\r\n      return;\r\n    }\r\n  \r\n    this.contaService.realizarDeposito(this.contaSelecionada.idConta, this.valor).subscribe({\r\n      next: (contaAtualizada) => {\r\n        alert('Depósito realizado com sucesso!');\r\n        this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\r\n        this.valor = 0; // Limpa o campo de valor\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao realizar depósito:', err);\r\n        alert('Erro ao realizar depósito. Tente novamente.');\r\n      },\r\n    });\r\n  }\r\n  \r\n  realizarSaque(): void {\r\n    if (!this.contaSelecionada || this.valor <= 0) {\r\n      alert('Informe um valor válido para saque.');\r\n      return;\r\n    }\r\n  \r\n    this.contaService.realizarSaque(this.contaSelecionada.idConta, this.valor).subscribe({\r\n      next: (contaAtualizada) => {\r\n        alert('Saque realizado com sucesso!');\r\n        this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\r\n        this.valor = 0; // Limpa o campo de valor\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao realizar saque:', err);\r\n        alert('Erro ao realizar saque. Tente novamente.');\r\n      },\r\n    });\r\n  }\r\n  \r\n\r\n  carregarExtrato(): void {\r\n    if (!this.contaSelecionada) {\r\n      alert('Selecione uma conta para visualizar o extrato.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.getExtrato(this.contaSelecionada.idConta).subscribe({\r\n      next: (extrato) => {\r\n        this.extrato = extrato;\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao carregar extrato:', err);\r\n        alert('Erro ao carregar o extrato.');\r\n      },\r\n    });\r\n  }\r\n\r\n  carregarDetalhesConta(): void {\r\n    if (!this.contaSelecionada) {\r\n      return;\r\n    }\r\n\r\n    this.contaService.obterDetalhesConta(this.contaSelecionada.idConta).subscribe({\r\n      next: (contaAtualizada) => {\r\n        this.contaSelecionada = contaAtualizada;\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao carregar detalhes da conta:', err);\r\n        alert('Erro ao carregar detalhes da conta.');\r\n      },\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <!-- Título e nome do usuário -->\r\n  <h1>Gerenciar Contas</h1>\r\n\r\n  <!-- Formulário para criar conta (aparece somente se não houver nenhuma conta) -->\r\n  <div *ngIf=\"contas.length === 0\">\r\n    <h3>Criar Conta</h3>\r\n    <label for=\"nomeTitular\">Nome do Titular</label>\r\n    <input type=\"text\" id=\"nomeTitular\" [(ngModel)]=\"nomeTitular\" placeholder=\"Digite o nome do titular\" />\r\n    <button (click)=\"criarConta()\">Criar Conta</button>\r\n  </div>\r\n\r\n  <!-- Listagem de contas -->\r\n  <div>\r\n    <h3>Contas Disponíveis</h3>\r\n    <ul>\r\n      <li *ngFor=\"let conta of contas\" (click)=\"selecionarConta(conta)\" [class.selected]=\"conta === contaSelecionada\">\r\n        {{ conta.nomeTitular }} - Saldo: {{ conta.saldo | currency }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <!-- Se uma conta for selecionada -->\r\n  <div *ngIf=\"contaSelecionada\">\r\n    <h3>Detalhes da Conta: {{ contaSelecionada.nomeTitular }}</h3>\r\n\r\n    <!-- Depósito -->\r\n    <div>\r\n      <h4>Realizar Depósito</h4>\r\n      <input type=\"number\" [(ngModel)]=\"valor\" placeholder=\"Valor do Depósito\" />\r\n      <button (click)=\"realizarDeposito()\">Depositar</button>\r\n    </div>\r\n\r\n    <!-- Saque -->\r\n    <div>\r\n      <h4>Realizar Saque</h4>\r\n      <input type=\"number\" [(ngModel)]=\"valor\" placeholder=\"Valor do Saque\" />\r\n      <button (click)=\"realizarSaque()\">Sacar</button>\r\n    </div>\r\n\r\n    <!-- Extrato -->\r\n    <div>\r\n      <h4>Extrato da Conta</h4>\r\n      <button (click)=\"carregarExtrato()\">Carregar Extrato</button>\r\n      <!-- Exibe o extrato se o botão for clicado -->\r\n      <div *ngIf=\"extrato.length > 0\">\r\n        <ul>\r\n          <li *ngFor=\"let transacao of extrato\">\r\n            <!-- Formatando a data de acordo com o tipo de dado recebido -->\r\n            <span>{{ transacao.dataTransacao | date: 'dd/MM/yyyy HH:mm' }}</span> - \r\n            <span>{{ transacao.tipo }}</span> - \r\n            <span>{{ transacao.valor | currency }}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div *ngIf=\"extrato.length === 0\">\r\n        <p>Nenhuma transação registrada.</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Detalhes da conta -->\r\n    <div>\r\n      <button (click)=\"carregarDetalhesConta()\">Carregar Detalhes</button>\r\n      <div *ngIf=\"contaSelecionada\">\r\n        <p><strong>Saldo Atual:</strong> {{ contaSelecionada.saldo | currency }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Exibição de erros -->\r\n  <div *ngIf=\"erro\" class=\"error\">\r\n    <p>Ocorreu um erro ao carregar as contas. Tente novamente.</p>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}