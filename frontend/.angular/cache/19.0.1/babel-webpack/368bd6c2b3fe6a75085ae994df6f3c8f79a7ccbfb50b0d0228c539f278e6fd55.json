{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/conta.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ContaComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"p\");\n    i0.ɵɵtext(2, \"Nenhuma conta encontrada. Crie uma conta primeiro.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ContaComponent_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 8);\n    i0.ɵɵlistener(\"click\", function ContaComponent_li_10_Template_li_click_0_listener() {\n      const conta_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selecionarConta(conta_r2));\n    });\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const conta_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"selected\", (ctx_r2.contaSelecionada == null ? null : ctx_r2.contaSelecionada.idConta) === conta_r2.idConta);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(conta_r2.nomeTitular);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 4, conta_r2.saldo));\n  }\n}\nfunction ContaComponent_div_11_div_27_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"p\")(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\")(7, \"small\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r5.tipo);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\": \", i0.ɵɵpipeBind1(5, 3, item_r5.valor), \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 5, item_r5.dataTransacao, \"dd/MM/yyyy HH:mm\"));\n  }\n}\nfunction ContaComponent_div_11_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n    i0.ɵɵtext(2, \"Extrato\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, ContaComponent_div_11_div_27_li_4_Template, 10, 8, \"li\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.extrato);\n  }\n}\nfunction ContaComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n    i0.ɵɵtext(5, \"Saldo:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\")(9, \"strong\");\n    i0.ɵɵtext(10, \"Status:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p\")(13, \"strong\");\n    i0.ɵɵtext(14, \"Data de Cria\\u00E7\\u00E3o:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 10)(18, \"input\", 11);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ContaComponent_div_11_Template_input_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.valor, $event) || (ctx_r2.valor = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 12)(20, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_11_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.realizarDeposito());\n    });\n    i0.ɵɵtext(21, \"Depositar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_11_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.realizarSaque());\n    });\n    i0.ɵɵtext(23, \"Sacar\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(24, \"div\", 15)(25, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ContaComponent_div_11_Template_button_click_25_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.alternarExtrato());\n    });\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(27, ContaComponent_div_11_div_27_Template, 5, 1, \"div\", 17);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Conta Selecionada: \", ctx_r2.contaSelecionada.nomeTitular, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(7, 7, ctx_r2.contaSelecionada.saldo), \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.contaSelecionada.status ? \"Ativa\" : \"Inativa\", \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(16, 9, ctx_r2.contaSelecionada.dataCriacao), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.valor);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.mostrarExtrato ? \"Ocultar Extrato\" : \"Mostrar Extrato\", \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.mostrarExtrato);\n  }\n}\nexport let ContaComponent = /*#__PURE__*/(() => {\n  class ContaComponent {\n    contaService;\n    contas = [];\n    contaSelecionada = null;\n    nomeTitular = '';\n    valor = 0;\n    mostrarExtrato = false;\n    extrato = [];\n    erro = false;\n    constructor(contaService) {\n      this.contaService = contaService;\n    }\n    ngOnInit() {\n      this.listarContas();\n    }\n    listarContas() {\n      const idUsuario = localStorage.getItem('idUsuario');\n      if (!idUsuario) {\n        alert('Usuário não autenticado! Faça login para listar as contas.');\n        return;\n      }\n      this.contaService.listarContasPorUsuario().subscribe({\n        next: dados => {\n          console.log('Contas retornadas pelo backend:', dados);\n          this.contas = dados;\n          this.erro = false;\n        },\n        error: err => {\n          console.error('Erro ao listar contas:', err);\n          this.erro = true;\n          alert('Não foi possível listar as contas.');\n        }\n      });\n    }\n    selecionarConta(conta) {\n      this.contaSelecionada = conta;\n      this.mostrarExtrato = false; // Ocultar extrato ao selecionar outra conta\n    }\n    criarConta() {\n      const idUsuario = localStorage.getItem('idUsuario');\n      if (!idUsuario) {\n        alert('Usuário não autenticado!');\n        return;\n      }\n      if (!this.nomeTitular.trim()) {\n        alert('Informe o nome do titular para criar a conta.');\n        return;\n      }\n      this.contaService.criarConta({\n        nomeTitular: this.nomeTitular\n      }, +idUsuario).subscribe({\n        next: novaConta => {\n          console.log('Resposta da API (novaConta):', novaConta); // Verifique o que está sendo retornado\n          alert('Conta criada com sucesso!');\n          if (novaConta) {\n            this.contas.push(novaConta); // Adiciona a nova conta à lista\n            this.selecionarConta(novaConta); // Seleciona a conta automaticamente\n          } else {\n            console.error('Erro: A resposta da API não contém uma conta válida.');\n          }\n        },\n        error: err => {\n          console.error('Erro ao criar conta:', err);\n          alert('Erro ao criar a conta.');\n        }\n      });\n    }\n    realizarDeposito() {\n      if (!this.contaSelecionada || this.valor <= 0) {\n        alert('Informe um valor válido para depósito.');\n        return;\n      }\n      this.contaService.realizarDeposito(this.contaSelecionada.idConta, this.valor).subscribe({\n        next: contaAtualizada => {\n          alert('Depósito realizado com sucesso!');\n          this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\n          this.valor = 0; // Limpa o campo de valor\n        },\n        error: err => {\n          console.error('Erro ao realizar depósito:', err);\n          alert('Erro ao realizar depósito. Tente novamente.');\n        }\n      });\n    }\n    realizarSaque() {\n      if (!this.contaSelecionada || this.valor <= 0) {\n        alert('Informe um valor válido para saque.');\n        return;\n      }\n      this.contaService.realizarSaque(this.contaSelecionada.idConta, this.valor).subscribe({\n        next: contaAtualizada => {\n          alert('Saque realizado com sucesso!');\n          this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\n          this.valor = 0; // Limpa o campo de valor\n        },\n        error: err => {\n          console.error('Erro ao realizar saque:', err);\n          alert('Erro ao realizar saque. Tente novamente.');\n        }\n      });\n    }\n    alternarExtrato() {\n      this.mostrarExtrato = !this.mostrarExtrato;\n      if (this.mostrarExtrato) {\n        this.carregarExtrato();\n      }\n    }\n    carregarExtrato() {\n      if (!this.contaSelecionada) {\n        alert('Selecione uma conta para visualizar o extrato.');\n        return;\n      }\n      this.contaService.getExtrato(this.contaSelecionada.idConta).subscribe({\n        next: extrato => {\n          this.extrato = extrato;\n        },\n        error: err => {\n          console.error('Erro ao carregar extrato:', err);\n          alert('Erro ao carregar o extrato.');\n        }\n      });\n    }\n    carregarDetalhesConta() {\n      if (!this.contaSelecionada) {\n        return;\n      }\n      this.contaService.obterDetalhesConta(this.contaSelecionada.idConta).subscribe({\n        next: contaAtualizada => {\n          this.contaSelecionada = contaAtualizada;\n        },\n        error: err => {\n          console.error('Erro ao carregar detalhes da conta:', err);\n          alert('Erro ao carregar detalhes da conta.');\n        }\n      });\n    }\n    static ɵfac = function ContaComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ContaComponent)(i0.ɵɵdirectiveInject(i1.ContaService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ContaComponent,\n      selectors: [[\"app-conta\"]],\n      decls: 12,\n      vars: 3,\n      consts: [[1, \"container\"], [1, \"contas\"], [1, \"btn-criar-conta\", 3, \"click\"], [\"class\", \"aviso\", 4, \"ngIf\"], [1, \"contas-lista\"], [3, \"selected\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"detalhes-conta\", 4, \"ngIf\"], [1, \"aviso\"], [3, \"click\"], [1, \"detalhes-conta\"], [1, \"transacao\"], [\"type\", \"number\", \"placeholder\", \"Digite o valor\", 1, \"input-valor\", 3, \"ngModelChange\", \"ngModel\"], [1, \"acoes\"], [1, \"btn-deposito\", 3, \"click\"], [1, \"btn-saque\", 3, \"click\"], [1, \"extrato\"], [1, \"btn-extrato\", 3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function ContaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Gerenciar Conta Banc\\u00E1ria\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"h3\");\n          i0.ɵɵtext(5, \"Suas Contas\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function ContaComponent_Template_button_click_6_listener() {\n            return ctx.criarConta();\n          });\n          i0.ɵɵtext(7, \"Criar Conta\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(8, ContaComponent_div_8_Template, 3, 0, \"div\", 3);\n          i0.ɵɵelementStart(9, \"ul\", 4);\n          i0.ɵɵtemplate(10, ContaComponent_li_10_Template, 6, 6, \"li\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(11, ContaComponent_div_11_Template, 28, 11, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.contas.length === 0);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.contas);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.contaSelecionada);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, i2.CurrencyPipe, i2.DatePipe, FormsModule, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"\\n\\n.container[_ngcontent-%COMP%] {\\n  width: 80%;\\n  margin: 0 auto;\\n  padding: 20px;\\n  font-family: Arial, sans-serif;\\n}\\n\\n\\n\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 20px;\\n  font-size: 2rem;\\n}\\n\\n\\n\\n.contas[_ngcontent-%COMP%] {\\n  margin-bottom: 30px;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n  font-size: 1.5rem;\\n  margin-bottom: 15px;\\n}\\n\\n.btn-criar-conta[_ngcontent-%COMP%] {\\n  padding: 10px 20px;\\n  background-color: #28a745;\\n  color: white;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  font-size: 1rem;\\n}\\n\\n.btn-criar-conta[_ngcontent-%COMP%]:hover {\\n  background-color: #218838;\\n}\\n\\n.contas-lista[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding: 0;\\n}\\n\\n.contas-lista[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  background-color: #f8f9fa;\\n  margin-bottom: 10px;\\n  border: 1px solid #ddd;\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  border-radius: 5px;\\n}\\n\\n.contas-lista[_ngcontent-%COMP%]   li.selected[_ngcontent-%COMP%] {\\n  background-color: #cce5ff;\\n  border-color: #007bff;\\n}\\n\\n.contas-lista[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover {\\n  background-color: #e9ecef;\\n}\\n\\n\\n\\n.detalhes-conta[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n\\n.detalhes-conta[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\n.detalhes-conta[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n  margin: 10px 0;\\n}\\n\\n\\n\\n.transacao[_ngcontent-%COMP%] {\\n  margin: 20px 0;\\n}\\n\\n.input-valor[_ngcontent-%COMP%] {\\n  width: 200px;\\n  padding: 10px;\\n  margin-right: 10px;\\n  font-size: 1rem;\\n  border: 1px solid #ddd;\\n  border-radius: 5px;\\n}\\n\\n.acoes[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.btn-deposito[_ngcontent-%COMP%], .btn-saque[_ngcontent-%COMP%] {\\n  padding: 10px 20px;\\n  font-size: 1rem;\\n  color: white;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.btn-deposito[_ngcontent-%COMP%] {\\n  background-color: #007bff;\\n}\\n\\n.btn-deposito[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n\\n.btn-saque[_ngcontent-%COMP%] {\\n  background-color: #dc3545;\\n}\\n\\n.btn-saque[_ngcontent-%COMP%]:hover {\\n  background-color: #c82333;\\n}\\n\\n\\n\\n.extrato[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n\\n.btn-extrato[_ngcontent-%COMP%] {\\n  padding: 10px 20px;\\n  background-color: #ffc107;\\n  color: white;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.btn-extrato[_ngcontent-%COMP%]:hover {\\n  background-color: #e0a800;\\n}\\n\\n.extrato[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding: 0;\\n}\\n\\n.extrato[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  border-bottom: 1px solid #ddd;\\n}\\n\\n.extrato[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:last-child {\\n  border-bottom: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29udGEtY29tcG9uZW50L2NvbnRhLWNvbXBvbmVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdCQUF3QjtBQUN4QjtFQUNFLFVBQVU7RUFDVixjQUFjO0VBQ2QsYUFBYTtFQUNiLDhCQUE4QjtBQUNoQzs7QUFFQSxXQUFXO0FBQ1g7RUFDRSxrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLGVBQWU7QUFDakI7O0FBRUEsb0JBQW9CO0FBQ3BCO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQix5QkFBeUI7RUFDekIsWUFBWTtFQUNaLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsVUFBVTtBQUNaOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHlCQUF5QjtFQUN6QixtQkFBbUI7RUFDbkIsc0JBQXNCO0VBQ3RCLGVBQWU7RUFDZixhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLG1CQUFtQjtFQUNuQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBLCtCQUErQjtBQUMvQjtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixjQUFjO0FBQ2hCOztBQUVBLGdEQUFnRDtBQUNoRDtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2Ysc0JBQXNCO0VBQ3RCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLFlBQVk7RUFDWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUEscUJBQXFCO0FBQ3JCO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGFBQWE7RUFDYiw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDb250YWluZXIgcHJpbmNpcGFsICovXG4uY29udGFpbmVyIHtcbiAgd2lkdGg6IDgwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcbn1cblxuLyogVMODwq10dWxvICovXG5oMiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgZm9udC1zaXplOiAycmVtO1xufVxuXG4vKiBTZcODwqfDg8KjbyBkZSBjb250YXMgKi9cbi5jb250YXMge1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuXG5oMyB7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuXG4uYnRuLWNyaWFyLWNvbnRhIHtcbiAgcGFkZGluZzogMTBweCAyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjhhNzQ1O1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbn1cblxuLmJ0bi1jcmlhci1jb250YTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMTg4Mzg7XG59XG5cbi5jb250YXMtbGlzdGEge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uY29udGFzLWxpc3RhIGxpIHtcbiAgcGFkZGluZzogMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuLmNvbnRhcy1saXN0YSBsaS5zZWxlY3RlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjY2U1ZmY7XG4gIGJvcmRlci1jb2xvcjogIzAwN2JmZjtcbn1cblxuLmNvbnRhcy1saXN0YSBsaTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWY7XG59XG5cbi8qIFNlw4PCp8ODwqNvIGRlIGRldGFsaGVzIGRhIGNvbnRhICovXG4uZGV0YWxoZXMtY29udGEge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4uZGV0YWxoZXMtY29udGEgaDMge1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuXG4uZGV0YWxoZXMtY29udGEgcCB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgbWFyZ2luOiAxMHB4IDA7XG59XG5cbi8qIEZvcm11bMODwqFyaW8gZGUgdHJhbnNhw4PCp8ODwrVlcyAoZGVww4PCs3NpdG8gZSBzYXF1ZSkgKi9cbi50cmFuc2FjYW8ge1xuICBtYXJnaW46IDIwcHggMDtcbn1cblxuLmlucHV0LXZhbG9yIHtcbiAgd2lkdGg6IDIwMHB4O1xuICBwYWRkaW5nOiAxMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuXG4uYWNvZXMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5idG4tZGVwb3NpdG8sIC5idG4tc2FxdWUge1xuICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgY29sb3I6IHdoaXRlO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uYnRuLWRlcG9zaXRvIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcbn1cblxuLmJ0bi1kZXBvc2l0bzpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDU2YjM7XG59XG5cbi5idG4tc2FxdWUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGMzNTQ1O1xufVxuXG4uYnRuLXNhcXVlOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2M4MjMzMztcbn1cblxuLyogU2XDg8Knw4PCo28gZGUgZXh0cmF0byAqL1xuLmV4dHJhdG8ge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4uYnRuLWV4dHJhdG8ge1xuICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmMxMDc7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmJ0bi1leHRyYXRvOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UwYTgwMDtcbn1cblxuLmV4dHJhdG8gdWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uZXh0cmF0byBsaSB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xufVxuXG4uZXh0cmF0byBsaTpsYXN0LWNoaWxkIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n  return ContaComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ContaComponent_li_10_Template_li_click_0_listener","conta_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","selecionarConta","ɵɵclassProp","contaSelecionada","idConta","ɵɵadvance","ɵɵtextInterpolate","nomeTitular","ɵɵpipeBind1","saldo","item_r5","tipo","ɵɵtextInterpolate1","valor","ɵɵpipeBind2","dataTransacao","ɵɵtemplate","ContaComponent_div_11_div_27_li_4_Template","ɵɵproperty","extrato","ɵɵtwoWayListener","ContaComponent_div_11_Template_input_ngModelChange_18_listener","$event","_r4","ɵɵtwoWayBindingSet","ContaComponent_div_11_Template_button_click_20_listener","realizarDeposito","ContaComponent_div_11_Template_button_click_22_listener","realizarSaque","ContaComponent_div_11_Template_button_click_25_listener","alternarExtrato","ContaComponent_div_11_div_27_Template","status","dataCriacao","ɵɵtwoWayProperty","mostrarExtrato","ContaComponent","contaService","contas","erro","constructor","ngOnInit","listarContas","idUsuario","localStorage","getItem","alert","listarContasPorUsuario","subscribe","next","dados","console","log","error","err","conta","criarConta","trim","novaConta","push","contaAtualizada","carregarExtrato","getExtrato","carregarDetalhesConta","obterDetalhesConta","ɵɵdirectiveInject","i1","ContaService","selectors","decls","vars","consts","template","ContaComponent_Template","rf","ctx","ContaComponent_Template_button_click_6_listener","ContaComponent_div_8_Template","ContaComponent_li_10_Template","ContaComponent_div_11_Template","length","i2","NgForOf","NgIf","CurrencyPipe","DatePipe","i3","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgModel","styles"],"sources":["C:\\Users\\Mallmann\\Desktop\\Teste\\frontend\\src\\app\\conta-component\\conta-component.component.ts","C:\\Users\\Mallmann\\Desktop\\Teste\\frontend\\src\\app\\conta-component\\conta-component.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ContaService } from '../services/conta.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ContaDTO } from '../conta.model';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-conta',\r\n  templateUrl: './conta-component.component.html',\r\n  styleUrls: ['./conta-component.component.css'],\r\n  imports: [CommonModule, FormsModule],\r\n})\r\nexport class ContaComponent implements OnInit {\r\n  contas: ContaDTO[] = [];\r\n  contaSelecionada: ContaDTO | null = null;\r\n  nomeTitular: string = '';\r\n  valor: number = 0;\r\n  mostrarExtrato: boolean = false;\r\n  extrato: any[] = [];\r\n  erro: boolean = false;\r\n\r\n  constructor(private contaService: ContaService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.listarContas();\r\n  }\r\n\r\n  listarContas(): void {\r\n    const idUsuario = localStorage.getItem('idUsuario');\r\n    if (!idUsuario) {\r\n      alert('Usuário não autenticado! Faça login para listar as contas.');\r\n      return;\r\n    }\r\n  \r\n    this.contaService.listarContasPorUsuario().subscribe({\r\n      next: (dados: ContaDTO[]) => {\r\n        console.log('Contas retornadas pelo backend:', dados);\r\n        this.contas = dados;\r\n        this.erro = false;\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao listar contas:', err);\r\n        this.erro = true;\r\n        alert('Não foi possível listar as contas.');\r\n      },\r\n    });\r\n  }\r\n  \r\n  \r\n\r\n  selecionarConta(conta: ContaDTO): void {\r\n    this.contaSelecionada = conta;\r\n    this.mostrarExtrato = false; // Ocultar extrato ao selecionar outra conta\r\n  }\r\n\r\n  criarConta(): void {\r\n    const idUsuario = localStorage.getItem('idUsuario');\r\n    if (!idUsuario) {\r\n      alert('Usuário não autenticado!');\r\n      return;\r\n    }\r\n  \r\n    if (!this.nomeTitular.trim()) {\r\n      alert('Informe o nome do titular para criar a conta.');\r\n      return;\r\n    }\r\n  \r\n    this.contaService.criarConta({ nomeTitular: this.nomeTitular }, +idUsuario).subscribe({\r\n      next: (novaConta: ContaDTO) => {\r\n        console.log('Resposta da API (novaConta):', novaConta); // Verifique o que está sendo retornado\r\n        alert('Conta criada com sucesso!');\r\n        if (novaConta) {\r\n          this.contas.push(novaConta);  // Adiciona a nova conta à lista\r\n          this.selecionarConta(novaConta);  // Seleciona a conta automaticamente\r\n        } else {\r\n          console.error('Erro: A resposta da API não contém uma conta válida.');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao criar conta:', err);\r\n        alert('Erro ao criar a conta.');\r\n      }\r\n    });\r\n  }\r\n  \r\n  \r\n  \r\n\r\n  realizarDeposito(): void {\r\n    if (!this.contaSelecionada || this.valor <= 0) {\r\n      alert('Informe um valor válido para depósito.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.realizarDeposito(this.contaSelecionada.idConta, this.valor).subscribe({\r\n      next: (contaAtualizada) => {\r\n        alert('Depósito realizado com sucesso!');\r\n        this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\r\n        this.valor = 0; // Limpa o campo de valor\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao realizar depósito:', err);\r\n        alert('Erro ao realizar depósito. Tente novamente.');\r\n      },\r\n    });\r\n  }\r\n\r\n  realizarSaque(): void {\r\n    if (!this.contaSelecionada || this.valor <= 0) {\r\n      alert('Informe um valor válido para saque.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.realizarSaque(this.contaSelecionada.idConta, this.valor).subscribe({\r\n      next: (contaAtualizada) => {\r\n        alert('Saque realizado com sucesso!');\r\n        this.contaSelecionada = contaAtualizada; // Atualiza o saldo da conta\r\n        this.valor = 0; // Limpa o campo de valor\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao realizar saque:', err);\r\n        alert('Erro ao realizar saque. Tente novamente.');\r\n      },\r\n    });\r\n  }\r\n\r\n  alternarExtrato(): void {\r\n    this.mostrarExtrato = !this.mostrarExtrato;\r\n    if (this.mostrarExtrato) {\r\n      this.carregarExtrato();\r\n    }\r\n  }\r\n\r\n  carregarExtrato(): void {\r\n    if (!this.contaSelecionada) {\r\n      alert('Selecione uma conta para visualizar o extrato.');\r\n      return;\r\n    }\r\n\r\n    this.contaService.getExtrato(this.contaSelecionada.idConta).subscribe({\r\n      next: (extrato) => {\r\n        this.extrato = extrato;\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao carregar extrato:', err);\r\n        alert('Erro ao carregar o extrato.');\r\n      },\r\n    });\r\n  }\r\n\r\n  carregarDetalhesConta(): void {\r\n    if (!this.contaSelecionada) {\r\n      return;\r\n    }\r\n\r\n    this.contaService.obterDetalhesConta(this.contaSelecionada.idConta).subscribe({\r\n      next: (contaAtualizada) => {\r\n        this.contaSelecionada = contaAtualizada;\r\n      },\r\n      error: (err) => {\r\n        console.error('Erro ao carregar detalhes da conta:', err);\r\n        alert('Erro ao carregar detalhes da conta.');\r\n      },\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <!-- Título -->\r\n  <h2>Gerenciar Conta Bancária</h2>\r\n\r\n  <!-- Seção de contas -->\r\n  <div class=\"contas\">\r\n    <h3>Suas Contas</h3>\r\n    <button (click)=\"criarConta()\" class=\"btn-criar-conta\">Criar Conta</button>\r\n\r\n    <div *ngIf=\"contas.length === 0\" class=\"aviso\">\r\n      <p>Nenhuma conta encontrada. Crie uma conta primeiro.</p>\r\n    </div>\r\n\r\n    <ul class=\"contas-lista\">\r\n      <li *ngFor=\"let conta of contas\" (click)=\"selecionarConta(conta)\" [class.selected]=\"contaSelecionada?.idConta === conta.idConta\">\r\n        <span>{{ conta.nomeTitular }}</span>\r\n        <span>{{ conta.saldo | currency }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <!-- Detalhes da conta selecionada -->\r\n  <div *ngIf=\"contaSelecionada\" class=\"detalhes-conta\">\r\n    <h3>Conta Selecionada: {{ contaSelecionada.nomeTitular }}</h3>\r\n    <p><strong>Saldo:</strong> {{ contaSelecionada.saldo | currency }}</p>\r\n    <p><strong>Status:</strong> {{ contaSelecionada.status ? 'Ativa' : 'Inativa' }}</p>\r\n    <p><strong>Data de Criação:</strong> {{ contaSelecionada.dataCriacao | date }}</p>\r\n\r\n    <!-- Formulário de depósito e saque -->\r\n    <div class=\"transacao\">\r\n      <input [(ngModel)]=\"valor\" type=\"number\" class=\"input-valor\" placeholder=\"Digite o valor\">\r\n      <div class=\"acoes\">\r\n        <button (click)=\"realizarDeposito()\" class=\"btn-deposito\">Depositar</button>\r\n        <button (click)=\"realizarSaque()\" class=\"btn-saque\">Sacar</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Extrato -->\r\n    <div class=\"extrato\">\r\n      <button (click)=\"alternarExtrato()\" class=\"btn-extrato\">\r\n        {{ mostrarExtrato ? 'Ocultar Extrato' : 'Mostrar Extrato' }}\r\n      </button>\r\n      <div *ngIf=\"mostrarExtrato\">\r\n        <h4>Extrato</h4>\r\n        <ul>\r\n          <li *ngFor=\"let item of extrato\">\r\n            <p><strong>{{ item.tipo }}</strong>: {{ item.valor | currency }}</p>\r\n            <p><small>{{ item.dataTransacao | date:'dd/MM/yyyy HH:mm' }}</small></p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}